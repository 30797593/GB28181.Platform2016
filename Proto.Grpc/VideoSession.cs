// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: video_session.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace MediaContract {

  /// <summary>Holder for reflection information generated from video_session.proto</summary>
  public static partial class VideoSessionReflection {

    #region Descriptor
    /// <summary>File descriptor for video_session.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static VideoSessionReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChN2aWRlb19zZXNzaW9uLnByb3RvEg1NZWRpYUNvbnRyYWN0Ij4KBkhlYWRl",
            "chIPCgdWZXJzaW9uGAEgASgFEhAKCHNlcXVlbmNlGAIgASgFEhEKCXNlc3Np",
            "b25pZBgDIAEoBSIjCgZTdGF0dXMSDAoEY29kZRgBIAEoBRILCgNtc2cYAiAB",
            "KAkimQEKEFN0YXJ0TGl2ZVJlcXVlc3QSIgoDaGRyGAEgASgLMhUuTWVkaWFD",
            "b250cmFjdC5IZWFkZXISNQoLdHJhbnNfcHJvdG8YAiABKA4yIC5NZWRpYUNv",
            "bnRyYWN0LlRyYW5zcG9ydFByb3RvY29sEgwKBGdiaWQYAyABKAkSDgoGaXBh",
            "ZGRyGAQgASgJEgwKBHBvcnQYBSABKAUieQoOU3RhcnRMaXZlUmVwbHkSIgoD",
            "aGRyGAEgASgLMhUuTWVkaWFDb250cmFjdC5IZWFkZXISJQoGc3RhdHVzGAIg",
            "ASgLMhUuTWVkaWFDb250cmFjdC5TdGF0dXMSDgoGaXBhZGRyGAMgASgJEgwK",
            "BHBvcnQYBCABKAUisgEKFFN0YXJ0UGxheWJhY2tSZXF1ZXN0EiIKA2hkchgB",
            "IAEoCzIVLk1lZGlhQ29udHJhY3QuSGVhZGVyEjUKC3RyYW5zX3Byb3RvGAIg",
            "ASgOMiAuTWVkaWFDb250cmFjdC5UcmFuc3BvcnRQcm90b2NvbBITCgtpc19k",
            "b3dubG9hZBgDIAEoCBIMCgRwb3J0GAQgASgFEg4KBmlwYWRkchgFIAEoCRIM",
            "CgRnYmlkGAYgASgJIn0KElN0YXJ0UGxheWJhY2tSZXBseRIiCgNoZHIYASAB",
            "KAsyFS5NZWRpYUNvbnRyYWN0LkhlYWRlchIlCgZzdGF0dXMYAiABKAsyFS5N",
            "ZWRpYUNvbnRyYWN0LlN0YXR1cxIOCgZpcGFkZHIYAyABKAkSDAoEcG9ydBgE",
            "IAEoBSJzCgtTdG9wUmVxdWVzdBIiCgNoZHIYASABKAsyFS5NZWRpYUNvbnRy",
            "YWN0LkhlYWRlchIMCgRnYmlkGAIgASgJEjIKDWJ1c2luZXNzX3R5cGUYAyAB",
            "KA4yGy5NZWRpYUNvbnRyYWN0LkJ1c2luZXNzVHlwZSJWCglTdG9wUmVwbHkS",
            "IgoDaGRyGAEgASgLMhUuTWVkaWFDb250cmFjdC5IZWFkZXISJQoGc3RhdHVz",
            "GAIgASgLMhUuTWVkaWFDb250cmFjdC5TdGF0dXMiNgoQS2VlcEFsaXZlUmVx",
            "dWVzdBIiCgNoZHIYASABKAsyFS5NZWRpYUNvbnRyYWN0LkhlYWRlciJbCg5L",
            "ZWVwQWxpdmVSZXBseRIiCgNoZHIYASABKAsyFS5NZWRpYUNvbnRyYWN0Lkhl",
            "YWRlchIlCgZzdGF0dXMYAiABKAsyFS5NZWRpYUNvbnRyYWN0LlN0YXR1cypN",
            "CgxCdXNpbmVzc1R5cGUSDwoLQlRfTElWRVBMQVkQABIPCgtCVF9QTEFZQkFD",
            "SxABEg8KC0JUX0RPV05MT0FEEAISCgoGQlRfTUFYEAMqLgoRVHJhbnNwb3J0",
            "UHJvdG9jb2wSBwoDVENQEAASBwoDVURQEAESBwoDTUFYEAIyxwIKDFZpZGVv",
            "U2Vzc2lvbhJNCglTdGFydExpdmUSHy5NZWRpYUNvbnRyYWN0LlN0YXJ0TGl2",
            "ZVJlcXVlc3QaHS5NZWRpYUNvbnRyYWN0LlN0YXJ0TGl2ZVJlcGx5IgASWQoN",
            "U3RhcnRQbGF5YmFjaxIjLk1lZGlhQ29udHJhY3QuU3RhcnRQbGF5YmFja1Jl",
            "cXVlc3QaIS5NZWRpYUNvbnRyYWN0LlN0YXJ0UGxheWJhY2tSZXBseSIAEj4K",
            "BFN0b3ASGi5NZWRpYUNvbnRyYWN0LlN0b3BSZXF1ZXN0GhguTWVkaWFDb250",
            "cmFjdC5TdG9wUmVwbHkiABJNCglLZWVwQWxpdmUSHy5NZWRpYUNvbnRyYWN0",
            "LktlZXBBbGl2ZVJlcXVlc3QaHS5NZWRpYUNvbnRyYWN0LktlZXBBbGl2ZVJl",
            "cGx5IgBCBaICAm1zYgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(new[] {typeof(global::MediaContract.BusinessType), typeof(global::MediaContract.TransportProtocol), }, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::MediaContract.Header), global::MediaContract.Header.Parser, new[]{ "Version", "Sequence", "Sessionid" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::MediaContract.Status), global::MediaContract.Status.Parser, new[]{ "Code", "Msg" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::MediaContract.StartLiveRequest), global::MediaContract.StartLiveRequest.Parser, new[]{ "Hdr", "TransProto", "Gbid", "Ipaddr", "Port" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::MediaContract.StartLiveReply), global::MediaContract.StartLiveReply.Parser, new[]{ "Hdr", "Status", "Ipaddr", "Port" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::MediaContract.StartPlaybackRequest), global::MediaContract.StartPlaybackRequest.Parser, new[]{ "Hdr", "TransProto", "IsDownload", "Port", "Ipaddr", "Gbid" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::MediaContract.StartPlaybackReply), global::MediaContract.StartPlaybackReply.Parser, new[]{ "Hdr", "Status", "Ipaddr", "Port" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::MediaContract.StopRequest), global::MediaContract.StopRequest.Parser, new[]{ "Hdr", "Gbid", "BusinessType" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::MediaContract.StopReply), global::MediaContract.StopReply.Parser, new[]{ "Hdr", "Status" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::MediaContract.KeepAliveRequest), global::MediaContract.KeepAliveRequest.Parser, new[]{ "Hdr" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::MediaContract.KeepAliveReply), global::MediaContract.KeepAliveReply.Parser, new[]{ "Hdr", "Status" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Enums
  public enum BusinessType {
    [pbr::OriginalName("BT_LIVEPLAY")] BtLiveplay = 0,
    [pbr::OriginalName("BT_PLAYBACK")] BtPlayback = 1,
    [pbr::OriginalName("BT_DOWNLOAD")] BtDownload = 2,
    [pbr::OriginalName("BT_MAX")] BtMax = 3,
  }

  public enum TransportProtocol {
    [pbr::OriginalName("TCP")] Tcp = 0,
    [pbr::OriginalName("UDP")] Udp = 1,
    [pbr::OriginalName("MAX")] Max = 2,
  }

  #endregion

  #region Messages
  public sealed partial class Header : pb::IMessage<Header> {
    private static readonly pb::MessageParser<Header> _parser = new pb::MessageParser<Header>(() => new Header());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Header> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::MediaContract.VideoSessionReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Header() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Header(Header other) : this() {
      version_ = other.version_;
      sequence_ = other.sequence_;
      sessionid_ = other.sessionid_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Header Clone() {
      return new Header(this);
    }

    /// <summary>Field number for the "Version" field.</summary>
    public const int VersionFieldNumber = 1;
    private int version_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Version {
      get { return version_; }
      set {
        version_ = value;
      }
    }

    /// <summary>Field number for the "sequence" field.</summary>
    public const int SequenceFieldNumber = 2;
    private int sequence_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Sequence {
      get { return sequence_; }
      set {
        sequence_ = value;
      }
    }

    /// <summary>Field number for the "sessionid" field.</summary>
    public const int SessionidFieldNumber = 3;
    private int sessionid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Sessionid {
      get { return sessionid_; }
      set {
        sessionid_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Header);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Header other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Version != other.Version) return false;
      if (Sequence != other.Sequence) return false;
      if (Sessionid != other.Sessionid) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Version != 0) hash ^= Version.GetHashCode();
      if (Sequence != 0) hash ^= Sequence.GetHashCode();
      if (Sessionid != 0) hash ^= Sessionid.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Version != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Version);
      }
      if (Sequence != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Sequence);
      }
      if (Sessionid != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Sessionid);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Version != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Version);
      }
      if (Sequence != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Sequence);
      }
      if (Sessionid != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Sessionid);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Header other) {
      if (other == null) {
        return;
      }
      if (other.Version != 0) {
        Version = other.Version;
      }
      if (other.Sequence != 0) {
        Sequence = other.Sequence;
      }
      if (other.Sessionid != 0) {
        Sessionid = other.Sessionid;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Version = input.ReadInt32();
            break;
          }
          case 16: {
            Sequence = input.ReadInt32();
            break;
          }
          case 24: {
            Sessionid = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class Status : pb::IMessage<Status> {
    private static readonly pb::MessageParser<Status> _parser = new pb::MessageParser<Status>(() => new Status());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Status> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::MediaContract.VideoSessionReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Status() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Status(Status other) : this() {
      code_ = other.code_;
      msg_ = other.msg_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Status Clone() {
      return new Status(this);
    }

    /// <summary>Field number for the "code" field.</summary>
    public const int CodeFieldNumber = 1;
    private int code_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Code {
      get { return code_; }
      set {
        code_ = value;
      }
    }

    /// <summary>Field number for the "msg" field.</summary>
    public const int MsgFieldNumber = 2;
    private string msg_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Msg {
      get { return msg_; }
      set {
        msg_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Status);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Status other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Code != other.Code) return false;
      if (Msg != other.Msg) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Code != 0) hash ^= Code.GetHashCode();
      if (Msg.Length != 0) hash ^= Msg.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Code != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Code);
      }
      if (Msg.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Msg);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Code != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Code);
      }
      if (Msg.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Msg);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Status other) {
      if (other == null) {
        return;
      }
      if (other.Code != 0) {
        Code = other.Code;
      }
      if (other.Msg.Length != 0) {
        Msg = other.Msg;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Code = input.ReadInt32();
            break;
          }
          case 18: {
            Msg = input.ReadString();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// The request message containing StartLiveRequest.
  /// </summary>
  public sealed partial class StartLiveRequest : pb::IMessage<StartLiveRequest> {
    private static readonly pb::MessageParser<StartLiveRequest> _parser = new pb::MessageParser<StartLiveRequest>(() => new StartLiveRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<StartLiveRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::MediaContract.VideoSessionReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StartLiveRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StartLiveRequest(StartLiveRequest other) : this() {
      Hdr = other.hdr_ != null ? other.Hdr.Clone() : null;
      transProto_ = other.transProto_;
      gbid_ = other.gbid_;
      ipaddr_ = other.ipaddr_;
      port_ = other.port_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StartLiveRequest Clone() {
      return new StartLiveRequest(this);
    }

    /// <summary>Field number for the "hdr" field.</summary>
    public const int HdrFieldNumber = 1;
    private global::MediaContract.Header hdr_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::MediaContract.Header Hdr {
      get { return hdr_; }
      set {
        hdr_ = value;
      }
    }

    /// <summary>Field number for the "trans_proto" field.</summary>
    public const int TransProtoFieldNumber = 2;
    private global::MediaContract.TransportProtocol transProto_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::MediaContract.TransportProtocol TransProto {
      get { return transProto_; }
      set {
        transProto_ = value;
      }
    }

    /// <summary>Field number for the "gbid" field.</summary>
    public const int GbidFieldNumber = 3;
    private string gbid_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Gbid {
      get { return gbid_; }
      set {
        gbid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ipaddr" field.</summary>
    public const int IpaddrFieldNumber = 4;
    private string ipaddr_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Ipaddr {
      get { return ipaddr_; }
      set {
        ipaddr_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "port" field.</summary>
    public const int PortFieldNumber = 5;
    private int port_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Port {
      get { return port_; }
      set {
        port_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as StartLiveRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(StartLiveRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Hdr, other.Hdr)) return false;
      if (TransProto != other.TransProto) return false;
      if (Gbid != other.Gbid) return false;
      if (Ipaddr != other.Ipaddr) return false;
      if (Port != other.Port) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (hdr_ != null) hash ^= Hdr.GetHashCode();
      if (TransProto != 0) hash ^= TransProto.GetHashCode();
      if (Gbid.Length != 0) hash ^= Gbid.GetHashCode();
      if (Ipaddr.Length != 0) hash ^= Ipaddr.GetHashCode();
      if (Port != 0) hash ^= Port.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (hdr_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Hdr);
      }
      if (TransProto != 0) {
        output.WriteRawTag(16);
        output.WriteEnum((int) TransProto);
      }
      if (Gbid.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Gbid);
      }
      if (Ipaddr.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Ipaddr);
      }
      if (Port != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(Port);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (hdr_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Hdr);
      }
      if (TransProto != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) TransProto);
      }
      if (Gbid.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Gbid);
      }
      if (Ipaddr.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Ipaddr);
      }
      if (Port != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Port);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(StartLiveRequest other) {
      if (other == null) {
        return;
      }
      if (other.hdr_ != null) {
        if (hdr_ == null) {
          hdr_ = new global::MediaContract.Header();
        }
        Hdr.MergeFrom(other.Hdr);
      }
      if (other.TransProto != 0) {
        TransProto = other.TransProto;
      }
      if (other.Gbid.Length != 0) {
        Gbid = other.Gbid;
      }
      if (other.Ipaddr.Length != 0) {
        Ipaddr = other.Ipaddr;
      }
      if (other.Port != 0) {
        Port = other.Port;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (hdr_ == null) {
              hdr_ = new global::MediaContract.Header();
            }
            input.ReadMessage(hdr_);
            break;
          }
          case 16: {
            transProto_ = (global::MediaContract.TransportProtocol) input.ReadEnum();
            break;
          }
          case 26: {
            Gbid = input.ReadString();
            break;
          }
          case 34: {
            Ipaddr = input.ReadString();
            break;
          }
          case 40: {
            Port = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// The response message containing the StartLiveReply.
  /// </summary>
  public sealed partial class StartLiveReply : pb::IMessage<StartLiveReply> {
    private static readonly pb::MessageParser<StartLiveReply> _parser = new pb::MessageParser<StartLiveReply>(() => new StartLiveReply());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<StartLiveReply> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::MediaContract.VideoSessionReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StartLiveReply() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StartLiveReply(StartLiveReply other) : this() {
      Hdr = other.hdr_ != null ? other.Hdr.Clone() : null;
      Status = other.status_ != null ? other.Status.Clone() : null;
      ipaddr_ = other.ipaddr_;
      port_ = other.port_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StartLiveReply Clone() {
      return new StartLiveReply(this);
    }

    /// <summary>Field number for the "hdr" field.</summary>
    public const int HdrFieldNumber = 1;
    private global::MediaContract.Header hdr_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::MediaContract.Header Hdr {
      get { return hdr_; }
      set {
        hdr_ = value;
      }
    }

    /// <summary>Field number for the "status" field.</summary>
    public const int StatusFieldNumber = 2;
    private global::MediaContract.Status status_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::MediaContract.Status Status {
      get { return status_; }
      set {
        status_ = value;
      }
    }

    /// <summary>Field number for the "ipaddr" field.</summary>
    public const int IpaddrFieldNumber = 3;
    private string ipaddr_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Ipaddr {
      get { return ipaddr_; }
      set {
        ipaddr_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "port" field.</summary>
    public const int PortFieldNumber = 4;
    private int port_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Port {
      get { return port_; }
      set {
        port_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as StartLiveReply);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(StartLiveReply other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Hdr, other.Hdr)) return false;
      if (!object.Equals(Status, other.Status)) return false;
      if (Ipaddr != other.Ipaddr) return false;
      if (Port != other.Port) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (hdr_ != null) hash ^= Hdr.GetHashCode();
      if (status_ != null) hash ^= Status.GetHashCode();
      if (Ipaddr.Length != 0) hash ^= Ipaddr.GetHashCode();
      if (Port != 0) hash ^= Port.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (hdr_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Hdr);
      }
      if (status_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Status);
      }
      if (Ipaddr.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Ipaddr);
      }
      if (Port != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(Port);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (hdr_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Hdr);
      }
      if (status_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Status);
      }
      if (Ipaddr.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Ipaddr);
      }
      if (Port != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Port);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(StartLiveReply other) {
      if (other == null) {
        return;
      }
      if (other.hdr_ != null) {
        if (hdr_ == null) {
          hdr_ = new global::MediaContract.Header();
        }
        Hdr.MergeFrom(other.Hdr);
      }
      if (other.status_ != null) {
        if (status_ == null) {
          status_ = new global::MediaContract.Status();
        }
        Status.MergeFrom(other.Status);
      }
      if (other.Ipaddr.Length != 0) {
        Ipaddr = other.Ipaddr;
      }
      if (other.Port != 0) {
        Port = other.Port;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (hdr_ == null) {
              hdr_ = new global::MediaContract.Header();
            }
            input.ReadMessage(hdr_);
            break;
          }
          case 18: {
            if (status_ == null) {
              status_ = new global::MediaContract.Status();
            }
            input.ReadMessage(status_);
            break;
          }
          case 26: {
            Ipaddr = input.ReadString();
            break;
          }
          case 32: {
            Port = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// The request message containing StartPlaybackRequest/download.
  /// </summary>
  public sealed partial class StartPlaybackRequest : pb::IMessage<StartPlaybackRequest> {
    private static readonly pb::MessageParser<StartPlaybackRequest> _parser = new pb::MessageParser<StartPlaybackRequest>(() => new StartPlaybackRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<StartPlaybackRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::MediaContract.VideoSessionReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StartPlaybackRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StartPlaybackRequest(StartPlaybackRequest other) : this() {
      Hdr = other.hdr_ != null ? other.Hdr.Clone() : null;
      transProto_ = other.transProto_;
      isDownload_ = other.isDownload_;
      port_ = other.port_;
      ipaddr_ = other.ipaddr_;
      gbid_ = other.gbid_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StartPlaybackRequest Clone() {
      return new StartPlaybackRequest(this);
    }

    /// <summary>Field number for the "hdr" field.</summary>
    public const int HdrFieldNumber = 1;
    private global::MediaContract.Header hdr_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::MediaContract.Header Hdr {
      get { return hdr_; }
      set {
        hdr_ = value;
      }
    }

    /// <summary>Field number for the "trans_proto" field.</summary>
    public const int TransProtoFieldNumber = 2;
    private global::MediaContract.TransportProtocol transProto_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::MediaContract.TransportProtocol TransProto {
      get { return transProto_; }
      set {
        transProto_ = value;
      }
    }

    /// <summary>Field number for the "is_download" field.</summary>
    public const int IsDownloadFieldNumber = 3;
    private bool isDownload_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsDownload {
      get { return isDownload_; }
      set {
        isDownload_ = value;
      }
    }

    /// <summary>Field number for the "port" field.</summary>
    public const int PortFieldNumber = 4;
    private int port_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Port {
      get { return port_; }
      set {
        port_ = value;
      }
    }

    /// <summary>Field number for the "ipaddr" field.</summary>
    public const int IpaddrFieldNumber = 5;
    private string ipaddr_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Ipaddr {
      get { return ipaddr_; }
      set {
        ipaddr_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "gbid" field.</summary>
    public const int GbidFieldNumber = 6;
    private string gbid_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Gbid {
      get { return gbid_; }
      set {
        gbid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as StartPlaybackRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(StartPlaybackRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Hdr, other.Hdr)) return false;
      if (TransProto != other.TransProto) return false;
      if (IsDownload != other.IsDownload) return false;
      if (Port != other.Port) return false;
      if (Ipaddr != other.Ipaddr) return false;
      if (Gbid != other.Gbid) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (hdr_ != null) hash ^= Hdr.GetHashCode();
      if (TransProto != 0) hash ^= TransProto.GetHashCode();
      if (IsDownload != false) hash ^= IsDownload.GetHashCode();
      if (Port != 0) hash ^= Port.GetHashCode();
      if (Ipaddr.Length != 0) hash ^= Ipaddr.GetHashCode();
      if (Gbid.Length != 0) hash ^= Gbid.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (hdr_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Hdr);
      }
      if (TransProto != 0) {
        output.WriteRawTag(16);
        output.WriteEnum((int) TransProto);
      }
      if (IsDownload != false) {
        output.WriteRawTag(24);
        output.WriteBool(IsDownload);
      }
      if (Port != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(Port);
      }
      if (Ipaddr.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(Ipaddr);
      }
      if (Gbid.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(Gbid);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (hdr_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Hdr);
      }
      if (TransProto != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) TransProto);
      }
      if (IsDownload != false) {
        size += 1 + 1;
      }
      if (Port != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Port);
      }
      if (Ipaddr.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Ipaddr);
      }
      if (Gbid.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Gbid);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(StartPlaybackRequest other) {
      if (other == null) {
        return;
      }
      if (other.hdr_ != null) {
        if (hdr_ == null) {
          hdr_ = new global::MediaContract.Header();
        }
        Hdr.MergeFrom(other.Hdr);
      }
      if (other.TransProto != 0) {
        TransProto = other.TransProto;
      }
      if (other.IsDownload != false) {
        IsDownload = other.IsDownload;
      }
      if (other.Port != 0) {
        Port = other.Port;
      }
      if (other.Ipaddr.Length != 0) {
        Ipaddr = other.Ipaddr;
      }
      if (other.Gbid.Length != 0) {
        Gbid = other.Gbid;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (hdr_ == null) {
              hdr_ = new global::MediaContract.Header();
            }
            input.ReadMessage(hdr_);
            break;
          }
          case 16: {
            transProto_ = (global::MediaContract.TransportProtocol) input.ReadEnum();
            break;
          }
          case 24: {
            IsDownload = input.ReadBool();
            break;
          }
          case 32: {
            Port = input.ReadInt32();
            break;
          }
          case 42: {
            Ipaddr = input.ReadString();
            break;
          }
          case 50: {
            Gbid = input.ReadString();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// The response message containing the StartPlaybackReply/download.
  /// </summary>
  public sealed partial class StartPlaybackReply : pb::IMessage<StartPlaybackReply> {
    private static readonly pb::MessageParser<StartPlaybackReply> _parser = new pb::MessageParser<StartPlaybackReply>(() => new StartPlaybackReply());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<StartPlaybackReply> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::MediaContract.VideoSessionReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StartPlaybackReply() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StartPlaybackReply(StartPlaybackReply other) : this() {
      Hdr = other.hdr_ != null ? other.Hdr.Clone() : null;
      Status = other.status_ != null ? other.Status.Clone() : null;
      ipaddr_ = other.ipaddr_;
      port_ = other.port_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StartPlaybackReply Clone() {
      return new StartPlaybackReply(this);
    }

    /// <summary>Field number for the "hdr" field.</summary>
    public const int HdrFieldNumber = 1;
    private global::MediaContract.Header hdr_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::MediaContract.Header Hdr {
      get { return hdr_; }
      set {
        hdr_ = value;
      }
    }

    /// <summary>Field number for the "status" field.</summary>
    public const int StatusFieldNumber = 2;
    private global::MediaContract.Status status_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::MediaContract.Status Status {
      get { return status_; }
      set {
        status_ = value;
      }
    }

    /// <summary>Field number for the "ipaddr" field.</summary>
    public const int IpaddrFieldNumber = 3;
    private string ipaddr_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Ipaddr {
      get { return ipaddr_; }
      set {
        ipaddr_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "port" field.</summary>
    public const int PortFieldNumber = 4;
    private int port_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Port {
      get { return port_; }
      set {
        port_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as StartPlaybackReply);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(StartPlaybackReply other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Hdr, other.Hdr)) return false;
      if (!object.Equals(Status, other.Status)) return false;
      if (Ipaddr != other.Ipaddr) return false;
      if (Port != other.Port) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (hdr_ != null) hash ^= Hdr.GetHashCode();
      if (status_ != null) hash ^= Status.GetHashCode();
      if (Ipaddr.Length != 0) hash ^= Ipaddr.GetHashCode();
      if (Port != 0) hash ^= Port.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (hdr_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Hdr);
      }
      if (status_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Status);
      }
      if (Ipaddr.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Ipaddr);
      }
      if (Port != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(Port);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (hdr_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Hdr);
      }
      if (status_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Status);
      }
      if (Ipaddr.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Ipaddr);
      }
      if (Port != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Port);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(StartPlaybackReply other) {
      if (other == null) {
        return;
      }
      if (other.hdr_ != null) {
        if (hdr_ == null) {
          hdr_ = new global::MediaContract.Header();
        }
        Hdr.MergeFrom(other.Hdr);
      }
      if (other.status_ != null) {
        if (status_ == null) {
          status_ = new global::MediaContract.Status();
        }
        Status.MergeFrom(other.Status);
      }
      if (other.Ipaddr.Length != 0) {
        Ipaddr = other.Ipaddr;
      }
      if (other.Port != 0) {
        Port = other.Port;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (hdr_ == null) {
              hdr_ = new global::MediaContract.Header();
            }
            input.ReadMessage(hdr_);
            break;
          }
          case 18: {
            if (status_ == null) {
              status_ = new global::MediaContract.Status();
            }
            input.ReadMessage(status_);
            break;
          }
          case 26: {
            Ipaddr = input.ReadString();
            break;
          }
          case 32: {
            Port = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// The request message containing StopLiveRequest.
  /// </summary>
  public sealed partial class StopRequest : pb::IMessage<StopRequest> {
    private static readonly pb::MessageParser<StopRequest> _parser = new pb::MessageParser<StopRequest>(() => new StopRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<StopRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::MediaContract.VideoSessionReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StopRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StopRequest(StopRequest other) : this() {
      Hdr = other.hdr_ != null ? other.Hdr.Clone() : null;
      gbid_ = other.gbid_;
      businessType_ = other.businessType_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StopRequest Clone() {
      return new StopRequest(this);
    }

    /// <summary>Field number for the "hdr" field.</summary>
    public const int HdrFieldNumber = 1;
    private global::MediaContract.Header hdr_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::MediaContract.Header Hdr {
      get { return hdr_; }
      set {
        hdr_ = value;
      }
    }

    /// <summary>Field number for the "gbid" field.</summary>
    public const int GbidFieldNumber = 2;
    private string gbid_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Gbid {
      get { return gbid_; }
      set {
        gbid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "business_type" field.</summary>
    public const int BusinessTypeFieldNumber = 3;
    private global::MediaContract.BusinessType businessType_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::MediaContract.BusinessType BusinessType {
      get { return businessType_; }
      set {
        businessType_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as StopRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(StopRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Hdr, other.Hdr)) return false;
      if (Gbid != other.Gbid) return false;
      if (BusinessType != other.BusinessType) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (hdr_ != null) hash ^= Hdr.GetHashCode();
      if (Gbid.Length != 0) hash ^= Gbid.GetHashCode();
      if (BusinessType != 0) hash ^= BusinessType.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (hdr_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Hdr);
      }
      if (Gbid.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Gbid);
      }
      if (BusinessType != 0) {
        output.WriteRawTag(24);
        output.WriteEnum((int) BusinessType);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (hdr_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Hdr);
      }
      if (Gbid.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Gbid);
      }
      if (BusinessType != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) BusinessType);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(StopRequest other) {
      if (other == null) {
        return;
      }
      if (other.hdr_ != null) {
        if (hdr_ == null) {
          hdr_ = new global::MediaContract.Header();
        }
        Hdr.MergeFrom(other.Hdr);
      }
      if (other.Gbid.Length != 0) {
        Gbid = other.Gbid;
      }
      if (other.BusinessType != 0) {
        BusinessType = other.BusinessType;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (hdr_ == null) {
              hdr_ = new global::MediaContract.Header();
            }
            input.ReadMessage(hdr_);
            break;
          }
          case 18: {
            Gbid = input.ReadString();
            break;
          }
          case 24: {
            businessType_ = (global::MediaContract.BusinessType) input.ReadEnum();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// The response message containing the StopLiveReply.
  /// </summary>
  public sealed partial class StopReply : pb::IMessage<StopReply> {
    private static readonly pb::MessageParser<StopReply> _parser = new pb::MessageParser<StopReply>(() => new StopReply());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<StopReply> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::MediaContract.VideoSessionReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StopReply() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StopReply(StopReply other) : this() {
      Hdr = other.hdr_ != null ? other.Hdr.Clone() : null;
      Status = other.status_ != null ? other.Status.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StopReply Clone() {
      return new StopReply(this);
    }

    /// <summary>Field number for the "hdr" field.</summary>
    public const int HdrFieldNumber = 1;
    private global::MediaContract.Header hdr_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::MediaContract.Header Hdr {
      get { return hdr_; }
      set {
        hdr_ = value;
      }
    }

    /// <summary>Field number for the "status" field.</summary>
    public const int StatusFieldNumber = 2;
    private global::MediaContract.Status status_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::MediaContract.Status Status {
      get { return status_; }
      set {
        status_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as StopReply);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(StopReply other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Hdr, other.Hdr)) return false;
      if (!object.Equals(Status, other.Status)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (hdr_ != null) hash ^= Hdr.GetHashCode();
      if (status_ != null) hash ^= Status.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (hdr_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Hdr);
      }
      if (status_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Status);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (hdr_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Hdr);
      }
      if (status_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Status);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(StopReply other) {
      if (other == null) {
        return;
      }
      if (other.hdr_ != null) {
        if (hdr_ == null) {
          hdr_ = new global::MediaContract.Header();
        }
        Hdr.MergeFrom(other.Hdr);
      }
      if (other.status_ != null) {
        if (status_ == null) {
          status_ = new global::MediaContract.Status();
        }
        Status.MergeFrom(other.Status);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (hdr_ == null) {
              hdr_ = new global::MediaContract.Header();
            }
            input.ReadMessage(hdr_);
            break;
          }
          case 18: {
            if (status_ == null) {
              status_ = new global::MediaContract.Status();
            }
            input.ReadMessage(status_);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// The request message containing ParametersRequest.
  /// </summary>
  public sealed partial class KeepAliveRequest : pb::IMessage<KeepAliveRequest> {
    private static readonly pb::MessageParser<KeepAliveRequest> _parser = new pb::MessageParser<KeepAliveRequest>(() => new KeepAliveRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<KeepAliveRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::MediaContract.VideoSessionReflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public KeepAliveRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public KeepAliveRequest(KeepAliveRequest other) : this() {
      Hdr = other.hdr_ != null ? other.Hdr.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public KeepAliveRequest Clone() {
      return new KeepAliveRequest(this);
    }

    /// <summary>Field number for the "hdr" field.</summary>
    public const int HdrFieldNumber = 1;
    private global::MediaContract.Header hdr_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::MediaContract.Header Hdr {
      get { return hdr_; }
      set {
        hdr_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as KeepAliveRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(KeepAliveRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Hdr, other.Hdr)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (hdr_ != null) hash ^= Hdr.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (hdr_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Hdr);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (hdr_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Hdr);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(KeepAliveRequest other) {
      if (other == null) {
        return;
      }
      if (other.hdr_ != null) {
        if (hdr_ == null) {
          hdr_ = new global::MediaContract.Header();
        }
        Hdr.MergeFrom(other.Hdr);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (hdr_ == null) {
              hdr_ = new global::MediaContract.Header();
            }
            input.ReadMessage(hdr_);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// The response message containing the ParametersReply.
  /// </summary>
  public sealed partial class KeepAliveReply : pb::IMessage<KeepAliveReply> {
    private static readonly pb::MessageParser<KeepAliveReply> _parser = new pb::MessageParser<KeepAliveReply>(() => new KeepAliveReply());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<KeepAliveReply> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::MediaContract.VideoSessionReflection.Descriptor.MessageTypes[9]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public KeepAliveReply() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public KeepAliveReply(KeepAliveReply other) : this() {
      Hdr = other.hdr_ != null ? other.Hdr.Clone() : null;
      Status = other.status_ != null ? other.Status.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public KeepAliveReply Clone() {
      return new KeepAliveReply(this);
    }

    /// <summary>Field number for the "hdr" field.</summary>
    public const int HdrFieldNumber = 1;
    private global::MediaContract.Header hdr_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::MediaContract.Header Hdr {
      get { return hdr_; }
      set {
        hdr_ = value;
      }
    }

    /// <summary>Field number for the "status" field.</summary>
    public const int StatusFieldNumber = 2;
    private global::MediaContract.Status status_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::MediaContract.Status Status {
      get { return status_; }
      set {
        status_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as KeepAliveReply);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(KeepAliveReply other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Hdr, other.Hdr)) return false;
      if (!object.Equals(Status, other.Status)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (hdr_ != null) hash ^= Hdr.GetHashCode();
      if (status_ != null) hash ^= Status.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (hdr_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Hdr);
      }
      if (status_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Status);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (hdr_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Hdr);
      }
      if (status_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Status);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(KeepAliveReply other) {
      if (other == null) {
        return;
      }
      if (other.hdr_ != null) {
        if (hdr_ == null) {
          hdr_ = new global::MediaContract.Header();
        }
        Hdr.MergeFrom(other.Hdr);
      }
      if (other.status_ != null) {
        if (status_ == null) {
          status_ = new global::MediaContract.Status();
        }
        Status.MergeFrom(other.Status);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (hdr_ == null) {
              hdr_ = new global::MediaContract.Header();
            }
            input.ReadMessage(hdr_);
            break;
          }
          case 18: {
            if (status_ == null) {
              status_ = new global::MediaContract.Status();
            }
            input.ReadMessage(status_);
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
