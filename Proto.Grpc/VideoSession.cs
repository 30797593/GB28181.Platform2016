// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: video_session.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace MediaContract {

  /// <summary>Holder for reflection information generated from video_session.proto</summary>
  public static partial class VideoSessionReflection {

    #region Descriptor
    /// <summary>File descriptor for video_session.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static VideoSessionReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChN2aWRlb19zZXNzaW9uLnByb3RvEg1NZWRpYUNvbnRyYWN0Ij4KBkhlYWRl",
            "chIPCgdWZXJzaW9uGAEgASgJEhAKCHNlcXVlbmNlGAIgASgFEhEKCXNlc3Np",
            "b25pZBgDIAEoCSIjCgZTdGF0dXMSDAoEY29kZRgBIAEoBRILCgNtc2cYAiAB",
            "KAkimQEKEFN0YXJ0TGl2ZVJlcXVlc3QSIgoDaGRyGAEgASgLMhUuTWVkaWFD",
            "b250cmFjdC5IZWFkZXISNQoLdHJhbnNfcHJvdG8YAiABKA4yIC5NZWRpYUNv",
            "bnRyYWN0LlRyYW5zcG9ydFByb3RvY29sEgwKBGdiaWQYAyABKAkSDgoGaXBh",
            "ZGRyGAQgASgJEgwKBHBvcnQYBSABKAUieQoOU3RhcnRMaXZlUmVwbHkSIgoD",
            "aGRyGAEgASgLMhUuTWVkaWFDb250cmFjdC5IZWFkZXISJQoGc3RhdHVzGAIg",
            "ASgLMhUuTWVkaWFDb250cmFjdC5TdGF0dXMSDgoGaXBhZGRyGAMgASgJEgwK",
            "BHBvcnQYBCABKAUiwwEKFFN0YXJ0UGxheWJhY2tSZXF1ZXN0EiIKA2hkchgB",
            "IAEoCzIVLk1lZGlhQ29udHJhY3QuSGVhZGVyEjUKC3RyYW5zX3Byb3RvGAIg",
            "ASgOMiAuTWVkaWFDb250cmFjdC5UcmFuc3BvcnRQcm90b2NvbBIMCgRwb3J0",
            "GAMgASgFEg4KBmlwYWRkchgEIAEoCRIMCgRnYmlkGAUgASgJEhIKCmJlZ2lu",
            "X3RpbWUYByABKAkSEAoIZW5kX3RpbWUYCCABKAkifQoSU3RhcnRQbGF5YmFj",
            "a1JlcGx5EiIKA2hkchgBIAEoCzIVLk1lZGlhQ29udHJhY3QuSGVhZGVyEiUK",
            "BnN0YXR1cxgCIAEoCzIVLk1lZGlhQ29udHJhY3QuU3RhdHVzEg4KBmlwYWRk",
            "chgDIAEoCRIMCgRwb3J0GAQgASgFInMKC1N0b3BSZXF1ZXN0EiIKA2hkchgB",
            "IAEoCzIVLk1lZGlhQ29udHJhY3QuSGVhZGVyEgwKBGdiaWQYAiABKAkSMgoN",
            "YnVzaW5lc3NfdHlwZRgDIAEoDjIbLk1lZGlhQ29udHJhY3QuQnVzaW5lc3NU",
            "eXBlIlYKCVN0b3BSZXBseRIiCgNoZHIYASABKAsyFS5NZWRpYUNvbnRyYWN0",
            "LkhlYWRlchIlCgZzdGF0dXMYAiABKAsyFS5NZWRpYUNvbnRyYWN0LlN0YXR1",
            "cyJEChBLZWVwQWxpdmVSZXF1ZXN0EiIKA2hkchgBIAEoCzIVLk1lZGlhQ29u",
            "dHJhY3QuSGVhZGVyEgwKBGdiaWQYAiABKAkiWwoOS2VlcEFsaXZlUmVwbHkS",
            "IgoDaGRyGAEgASgLMhUuTWVkaWFDb250cmFjdC5IZWFkZXISJQoGc3RhdHVz",
            "GAIgASgLMhUuTWVkaWFDb250cmFjdC5TdGF0dXMiSAoUQmFja1ZpZGVvU3Rv",
            "cFJlcXVlc3QSIgoDaGRyGAEgASgLMhUuTWVkaWFDb250cmFjdC5IZWFkZXIS",
            "DAoEZ2JpZBgCIAEoCSJfChJCYWNrVmlkZW9TdG9wUmVwbHkSIgoDaGRyGAEg",
            "ASgLMhUuTWVkaWFDb250cmFjdC5IZWFkZXISJQoGc3RhdHVzGAIgASgLMhUu",
            "TWVkaWFDb250cmFjdC5TdGF0dXMiWAoVQmFja1ZpZGVvU3BlZWRSZXF1ZXN0",
            "EiIKA2hkchgBIAEoCzIVLk1lZGlhQ29udHJhY3QuSGVhZGVyEgwKBGdiaWQY",
            "AiABKAkSDQoFc2NhbGUYAyABKAIiYAoTQmFja1ZpZGVvU3BlZWRSZXBseRIi",
            "CgNoZHIYASABKAsyFS5NZWRpYUNvbnRyYWN0LkhlYWRlchIlCgZzdGF0dXMY",
            "AiABKAsyFS5NZWRpYUNvbnRyYWN0LlN0YXR1cyJJChVCYWNrVmlkZW9QYXVz",
            "ZVJlcXVlc3QSIgoDaGRyGAEgASgLMhUuTWVkaWFDb250cmFjdC5IZWFkZXIS",
            "DAoEZ2JpZBgCIAEoCSJgChNCYWNrVmlkZW9QYXVzZVJlcGx5EiIKA2hkchgB",
            "IAEoCzIVLk1lZGlhQ29udHJhY3QuSGVhZGVyEiUKBnN0YXR1cxgCIAEoCzIV",
            "Lk1lZGlhQ29udHJhY3QuU3RhdHVzIkwKGEJhY2tWaWRlb0NvbnRpbnVlUmVx",
            "dWVzdBIiCgNoZHIYASABKAsyFS5NZWRpYUNvbnRyYWN0LkhlYWRlchIMCgRn",
            "YmlkGAIgASgJImMKFkJhY2tWaWRlb0NvbnRpbnVlUmVwbHkSIgoDaGRyGAEg",
            "ASgLMhUuTWVkaWFDb250cmFjdC5IZWFkZXISJQoGc3RhdHVzGAIgASgLMhUu",
            "TWVkaWFDb250cmFjdC5TdGF0dXMiWwoYQmFja1ZpZGVvUG9zaXRpb25SZXF1",
            "ZXN0EiIKA2hkchgBIAEoCzIVLk1lZGlhQ29udHJhY3QuSGVhZGVyEgwKBGdi",
            "aWQYAiABKAkSDQoFcmFuZ2UYAyABKAUiYwoWQmFja1ZpZGVvUG9zaXRpb25S",
            "ZXBseRIiCgNoZHIYASABKAsyFS5NZWRpYUNvbnRyYWN0LkhlYWRlchIlCgZz",
            "dGF0dXMYAiABKAsyFS5NZWRpYUNvbnRyYWN0LlN0YXR1cypNCgxCdXNpbmVz",
            "c1R5cGUSDwoLQlRfTElWRVBMQVkQABIPCgtCVF9QTEFZQkFDSxABEg8KC0JU",
            "X0RPV05MT0FEEAISCgoGQlRfTUFYEAMqLgoRVHJhbnNwb3J0UHJvdG9jb2wS",
            "BwoDVENQEAASBwoDVURQEAESBwoDTUFYEAIyrAYKDFZpZGVvU2Vzc2lvbhJN",
            "CglTdGFydExpdmUSHy5NZWRpYUNvbnRyYWN0LlN0YXJ0TGl2ZVJlcXVlc3Qa",
            "HS5NZWRpYUNvbnRyYWN0LlN0YXJ0TGl2ZVJlcGx5IgASWQoNU3RhcnRQbGF5",
            "YmFjaxIjLk1lZGlhQ29udHJhY3QuU3RhcnRQbGF5YmFja1JlcXVlc3QaIS5N",
            "ZWRpYUNvbnRyYWN0LlN0YXJ0UGxheWJhY2tSZXBseSIAEj4KBFN0b3ASGi5N",
            "ZWRpYUNvbnRyYWN0LlN0b3BSZXF1ZXN0GhguTWVkaWFDb250cmFjdC5TdG9w",
            "UmVwbHkiABJZCg1CYWNrVmlkZW9TdG9wEiMuTWVkaWFDb250cmFjdC5CYWNr",
            "VmlkZW9TdG9wUmVxdWVzdBohLk1lZGlhQ29udHJhY3QuQmFja1ZpZGVvU3Rv",
            "cFJlcGx5IgASXAoOQmFja1ZpZGVvU3BlZWQSJC5NZWRpYUNvbnRyYWN0LkJh",
            "Y2tWaWRlb1NwZWVkUmVxdWVzdBoiLk1lZGlhQ29udHJhY3QuQmFja1ZpZGVv",
            "U3BlZWRSZXBseSIAElwKDkJhY2tWaWRlb1BhdXNlEiQuTWVkaWFDb250cmFj",
            "dC5CYWNrVmlkZW9QYXVzZVJlcXVlc3QaIi5NZWRpYUNvbnRyYWN0LkJhY2tW",
            "aWRlb1BhdXNlUmVwbHkiABJlChFCYWNrVmlkZW9Db250aW51ZRInLk1lZGlh",
            "Q29udHJhY3QuQmFja1ZpZGVvQ29udGludWVSZXF1ZXN0GiUuTWVkaWFDb250",
            "cmFjdC5CYWNrVmlkZW9Db250aW51ZVJlcGx5IgASZQoRQmFja1ZpZGVvUG9z",
            "aXRpb24SJy5NZWRpYUNvbnRyYWN0LkJhY2tWaWRlb1Bvc2l0aW9uUmVxdWVz",
            "dBolLk1lZGlhQ29udHJhY3QuQmFja1ZpZGVvUG9zaXRpb25SZXBseSIAEk0K",
            "CUtlZXBBbGl2ZRIfLk1lZGlhQ29udHJhY3QuS2VlcEFsaXZlUmVxdWVzdBod",
            "Lk1lZGlhQ29udHJhY3QuS2VlcEFsaXZlUmVwbHkiAEIFogICbXNiBnByb3Rv",
            "Mw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(new[] {typeof(global::MediaContract.BusinessType), typeof(global::MediaContract.TransportProtocol), }, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::MediaContract.Header), global::MediaContract.Header.Parser, new[]{ "Version", "Sequence", "Sessionid" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::MediaContract.Status), global::MediaContract.Status.Parser, new[]{ "Code", "Msg" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::MediaContract.StartLiveRequest), global::MediaContract.StartLiveRequest.Parser, new[]{ "Hdr", "TransProto", "Gbid", "Ipaddr", "Port" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::MediaContract.StartLiveReply), global::MediaContract.StartLiveReply.Parser, new[]{ "Hdr", "Status", "Ipaddr", "Port" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::MediaContract.StartPlaybackRequest), global::MediaContract.StartPlaybackRequest.Parser, new[]{ "Hdr", "TransProto", "Port", "Ipaddr", "Gbid", "BeginTime", "EndTime" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::MediaContract.StartPlaybackReply), global::MediaContract.StartPlaybackReply.Parser, new[]{ "Hdr", "Status", "Ipaddr", "Port" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::MediaContract.StopRequest), global::MediaContract.StopRequest.Parser, new[]{ "Hdr", "Gbid", "BusinessType" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::MediaContract.StopReply), global::MediaContract.StopReply.Parser, new[]{ "Hdr", "Status" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::MediaContract.KeepAliveRequest), global::MediaContract.KeepAliveRequest.Parser, new[]{ "Hdr", "Gbid" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::MediaContract.KeepAliveReply), global::MediaContract.KeepAliveReply.Parser, new[]{ "Hdr", "Status" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::MediaContract.BackVideoStopRequest), global::MediaContract.BackVideoStopRequest.Parser, new[]{ "Hdr", "Gbid" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::MediaContract.BackVideoStopReply), global::MediaContract.BackVideoStopReply.Parser, new[]{ "Hdr", "Status" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::MediaContract.BackVideoSpeedRequest), global::MediaContract.BackVideoSpeedRequest.Parser, new[]{ "Hdr", "Gbid", "Scale" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::MediaContract.BackVideoSpeedReply), global::MediaContract.BackVideoSpeedReply.Parser, new[]{ "Hdr", "Status" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::MediaContract.BackVideoPauseRequest), global::MediaContract.BackVideoPauseRequest.Parser, new[]{ "Hdr", "Gbid" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::MediaContract.BackVideoPauseReply), global::MediaContract.BackVideoPauseReply.Parser, new[]{ "Hdr", "Status" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::MediaContract.BackVideoContinueRequest), global::MediaContract.BackVideoContinueRequest.Parser, new[]{ "Hdr", "Gbid" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::MediaContract.BackVideoContinueReply), global::MediaContract.BackVideoContinueReply.Parser, new[]{ "Hdr", "Status" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::MediaContract.BackVideoPositionRequest), global::MediaContract.BackVideoPositionRequest.Parser, new[]{ "Hdr", "Gbid", "Range" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::MediaContract.BackVideoPositionReply), global::MediaContract.BackVideoPositionReply.Parser, new[]{ "Hdr", "Status" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Enums
  public enum BusinessType {
    [pbr::OriginalName("BT_LIVEPLAY")] BtLiveplay = 0,
    [pbr::OriginalName("BT_PLAYBACK")] BtPlayback = 1,
    [pbr::OriginalName("BT_DOWNLOAD")] BtDownload = 2,
    [pbr::OriginalName("BT_MAX")] BtMax = 3,
  }

  public enum TransportProtocol {
    [pbr::OriginalName("TCP")] Tcp = 0,
    [pbr::OriginalName("UDP")] Udp = 1,
    [pbr::OriginalName("MAX")] Max = 2,
  }

  #endregion

  #region Messages
  public sealed partial class Header : pb::IMessage<Header> {
    private static readonly pb::MessageParser<Header> _parser = new pb::MessageParser<Header>(() => new Header());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Header> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::MediaContract.VideoSessionReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Header() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Header(Header other) : this() {
      version_ = other.version_;
      sequence_ = other.sequence_;
      sessionid_ = other.sessionid_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Header Clone() {
      return new Header(this);
    }

    /// <summary>Field number for the "Version" field.</summary>
    public const int VersionFieldNumber = 1;
    private string version_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Version {
      get { return version_; }
      set {
        version_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "sequence" field.</summary>
    public const int SequenceFieldNumber = 2;
    private int sequence_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Sequence {
      get { return sequence_; }
      set {
        sequence_ = value;
      }
    }

    /// <summary>Field number for the "sessionid" field.</summary>
    public const int SessionidFieldNumber = 3;
    private string sessionid_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Sessionid {
      get { return sessionid_; }
      set {
        sessionid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Header);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Header other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Version != other.Version) return false;
      if (Sequence != other.Sequence) return false;
      if (Sessionid != other.Sessionid) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Version.Length != 0) hash ^= Version.GetHashCode();
      if (Sequence != 0) hash ^= Sequence.GetHashCode();
      if (Sessionid.Length != 0) hash ^= Sessionid.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Version.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Version);
      }
      if (Sequence != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Sequence);
      }
      if (Sessionid.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Sessionid);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Version.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Version);
      }
      if (Sequence != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Sequence);
      }
      if (Sessionid.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Sessionid);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Header other) {
      if (other == null) {
        return;
      }
      if (other.Version.Length != 0) {
        Version = other.Version;
      }
      if (other.Sequence != 0) {
        Sequence = other.Sequence;
      }
      if (other.Sessionid.Length != 0) {
        Sessionid = other.Sessionid;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Version = input.ReadString();
            break;
          }
          case 16: {
            Sequence = input.ReadInt32();
            break;
          }
          case 26: {
            Sessionid = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class Status : pb::IMessage<Status> {
    private static readonly pb::MessageParser<Status> _parser = new pb::MessageParser<Status>(() => new Status());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Status> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::MediaContract.VideoSessionReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Status() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Status(Status other) : this() {
      code_ = other.code_;
      msg_ = other.msg_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Status Clone() {
      return new Status(this);
    }

    /// <summary>Field number for the "code" field.</summary>
    public const int CodeFieldNumber = 1;
    private int code_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Code {
      get { return code_; }
      set {
        code_ = value;
      }
    }

    /// <summary>Field number for the "msg" field.</summary>
    public const int MsgFieldNumber = 2;
    private string msg_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Msg {
      get { return msg_; }
      set {
        msg_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Status);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Status other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Code != other.Code) return false;
      if (Msg != other.Msg) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Code != 0) hash ^= Code.GetHashCode();
      if (Msg.Length != 0) hash ^= Msg.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Code != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Code);
      }
      if (Msg.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Msg);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Code != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Code);
      }
      if (Msg.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Msg);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Status other) {
      if (other == null) {
        return;
      }
      if (other.Code != 0) {
        Code = other.Code;
      }
      if (other.Msg.Length != 0) {
        Msg = other.Msg;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Code = input.ReadInt32();
            break;
          }
          case 18: {
            Msg = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class StartLiveRequest : pb::IMessage<StartLiveRequest> {
    private static readonly pb::MessageParser<StartLiveRequest> _parser = new pb::MessageParser<StartLiveRequest>(() => new StartLiveRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<StartLiveRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::MediaContract.VideoSessionReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StartLiveRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StartLiveRequest(StartLiveRequest other) : this() {
      Hdr = other.hdr_ != null ? other.Hdr.Clone() : null;
      transProto_ = other.transProto_;
      gbid_ = other.gbid_;
      ipaddr_ = other.ipaddr_;
      port_ = other.port_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StartLiveRequest Clone() {
      return new StartLiveRequest(this);
    }

    /// <summary>Field number for the "hdr" field.</summary>
    public const int HdrFieldNumber = 1;
    private global::MediaContract.Header hdr_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::MediaContract.Header Hdr {
      get { return hdr_; }
      set {
        hdr_ = value;
      }
    }

    /// <summary>Field number for the "trans_proto" field.</summary>
    public const int TransProtoFieldNumber = 2;
    private global::MediaContract.TransportProtocol transProto_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::MediaContract.TransportProtocol TransProto {
      get { return transProto_; }
      set {
        transProto_ = value;
      }
    }

    /// <summary>Field number for the "gbid" field.</summary>
    public const int GbidFieldNumber = 3;
    private string gbid_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Gbid {
      get { return gbid_; }
      set {
        gbid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ipaddr" field.</summary>
    public const int IpaddrFieldNumber = 4;
    private string ipaddr_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Ipaddr {
      get { return ipaddr_; }
      set {
        ipaddr_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "port" field.</summary>
    public const int PortFieldNumber = 5;
    private int port_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Port {
      get { return port_; }
      set {
        port_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as StartLiveRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(StartLiveRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Hdr, other.Hdr)) return false;
      if (TransProto != other.TransProto) return false;
      if (Gbid != other.Gbid) return false;
      if (Ipaddr != other.Ipaddr) return false;
      if (Port != other.Port) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (hdr_ != null) hash ^= Hdr.GetHashCode();
      if (TransProto != 0) hash ^= TransProto.GetHashCode();
      if (Gbid.Length != 0) hash ^= Gbid.GetHashCode();
      if (Ipaddr.Length != 0) hash ^= Ipaddr.GetHashCode();
      if (Port != 0) hash ^= Port.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (hdr_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Hdr);
      }
      if (TransProto != 0) {
        output.WriteRawTag(16);
        output.WriteEnum((int) TransProto);
      }
      if (Gbid.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Gbid);
      }
      if (Ipaddr.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Ipaddr);
      }
      if (Port != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(Port);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (hdr_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Hdr);
      }
      if (TransProto != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) TransProto);
      }
      if (Gbid.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Gbid);
      }
      if (Ipaddr.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Ipaddr);
      }
      if (Port != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Port);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(StartLiveRequest other) {
      if (other == null) {
        return;
      }
      if (other.hdr_ != null) {
        if (hdr_ == null) {
          hdr_ = new global::MediaContract.Header();
        }
        Hdr.MergeFrom(other.Hdr);
      }
      if (other.TransProto != 0) {
        TransProto = other.TransProto;
      }
      if (other.Gbid.Length != 0) {
        Gbid = other.Gbid;
      }
      if (other.Ipaddr.Length != 0) {
        Ipaddr = other.Ipaddr;
      }
      if (other.Port != 0) {
        Port = other.Port;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (hdr_ == null) {
              hdr_ = new global::MediaContract.Header();
            }
            input.ReadMessage(hdr_);
            break;
          }
          case 16: {
            transProto_ = (global::MediaContract.TransportProtocol) input.ReadEnum();
            break;
          }
          case 26: {
            Gbid = input.ReadString();
            break;
          }
          case 34: {
            Ipaddr = input.ReadString();
            break;
          }
          case 40: {
            Port = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class StartLiveReply : pb::IMessage<StartLiveReply> {
    private static readonly pb::MessageParser<StartLiveReply> _parser = new pb::MessageParser<StartLiveReply>(() => new StartLiveReply());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<StartLiveReply> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::MediaContract.VideoSessionReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StartLiveReply() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StartLiveReply(StartLiveReply other) : this() {
      Hdr = other.hdr_ != null ? other.Hdr.Clone() : null;
      Status = other.status_ != null ? other.Status.Clone() : null;
      ipaddr_ = other.ipaddr_;
      port_ = other.port_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StartLiveReply Clone() {
      return new StartLiveReply(this);
    }

    /// <summary>Field number for the "hdr" field.</summary>
    public const int HdrFieldNumber = 1;
    private global::MediaContract.Header hdr_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::MediaContract.Header Hdr {
      get { return hdr_; }
      set {
        hdr_ = value;
      }
    }

    /// <summary>Field number for the "status" field.</summary>
    public const int StatusFieldNumber = 2;
    private global::MediaContract.Status status_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::MediaContract.Status Status {
      get { return status_; }
      set {
        status_ = value;
      }
    }

    /// <summary>Field number for the "ipaddr" field.</summary>
    public const int IpaddrFieldNumber = 3;
    private string ipaddr_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Ipaddr {
      get { return ipaddr_; }
      set {
        ipaddr_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "port" field.</summary>
    public const int PortFieldNumber = 4;
    private int port_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Port {
      get { return port_; }
      set {
        port_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as StartLiveReply);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(StartLiveReply other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Hdr, other.Hdr)) return false;
      if (!object.Equals(Status, other.Status)) return false;
      if (Ipaddr != other.Ipaddr) return false;
      if (Port != other.Port) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (hdr_ != null) hash ^= Hdr.GetHashCode();
      if (status_ != null) hash ^= Status.GetHashCode();
      if (Ipaddr.Length != 0) hash ^= Ipaddr.GetHashCode();
      if (Port != 0) hash ^= Port.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (hdr_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Hdr);
      }
      if (status_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Status);
      }
      if (Ipaddr.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Ipaddr);
      }
      if (Port != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(Port);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (hdr_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Hdr);
      }
      if (status_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Status);
      }
      if (Ipaddr.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Ipaddr);
      }
      if (Port != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Port);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(StartLiveReply other) {
      if (other == null) {
        return;
      }
      if (other.hdr_ != null) {
        if (hdr_ == null) {
          hdr_ = new global::MediaContract.Header();
        }
        Hdr.MergeFrom(other.Hdr);
      }
      if (other.status_ != null) {
        if (status_ == null) {
          status_ = new global::MediaContract.Status();
        }
        Status.MergeFrom(other.Status);
      }
      if (other.Ipaddr.Length != 0) {
        Ipaddr = other.Ipaddr;
      }
      if (other.Port != 0) {
        Port = other.Port;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (hdr_ == null) {
              hdr_ = new global::MediaContract.Header();
            }
            input.ReadMessage(hdr_);
            break;
          }
          case 18: {
            if (status_ == null) {
              status_ = new global::MediaContract.Status();
            }
            input.ReadMessage(status_);
            break;
          }
          case 26: {
            Ipaddr = input.ReadString();
            break;
          }
          case 32: {
            Port = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class StartPlaybackRequest : pb::IMessage<StartPlaybackRequest> {
    private static readonly pb::MessageParser<StartPlaybackRequest> _parser = new pb::MessageParser<StartPlaybackRequest>(() => new StartPlaybackRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<StartPlaybackRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::MediaContract.VideoSessionReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StartPlaybackRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StartPlaybackRequest(StartPlaybackRequest other) : this() {
      Hdr = other.hdr_ != null ? other.Hdr.Clone() : null;
      transProto_ = other.transProto_;
      port_ = other.port_;
      ipaddr_ = other.ipaddr_;
      gbid_ = other.gbid_;
      beginTime_ = other.beginTime_;
      endTime_ = other.endTime_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StartPlaybackRequest Clone() {
      return new StartPlaybackRequest(this);
    }

    /// <summary>Field number for the "hdr" field.</summary>
    public const int HdrFieldNumber = 1;
    private global::MediaContract.Header hdr_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::MediaContract.Header Hdr {
      get { return hdr_; }
      set {
        hdr_ = value;
      }
    }

    /// <summary>Field number for the "trans_proto" field.</summary>
    public const int TransProtoFieldNumber = 2;
    private global::MediaContract.TransportProtocol transProto_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::MediaContract.TransportProtocol TransProto {
      get { return transProto_; }
      set {
        transProto_ = value;
      }
    }

    /// <summary>Field number for the "port" field.</summary>
    public const int PortFieldNumber = 3;
    private int port_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Port {
      get { return port_; }
      set {
        port_ = value;
      }
    }

    /// <summary>Field number for the "ipaddr" field.</summary>
    public const int IpaddrFieldNumber = 4;
    private string ipaddr_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Ipaddr {
      get { return ipaddr_; }
      set {
        ipaddr_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "gbid" field.</summary>
    public const int GbidFieldNumber = 5;
    private string gbid_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Gbid {
      get { return gbid_; }
      set {
        gbid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "begin_time" field.</summary>
    public const int BeginTimeFieldNumber = 7;
    private string beginTime_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string BeginTime {
      get { return beginTime_; }
      set {
        beginTime_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "end_time" field.</summary>
    public const int EndTimeFieldNumber = 8;
    private string endTime_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string EndTime {
      get { return endTime_; }
      set {
        endTime_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as StartPlaybackRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(StartPlaybackRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Hdr, other.Hdr)) return false;
      if (TransProto != other.TransProto) return false;
      if (Port != other.Port) return false;
      if (Ipaddr != other.Ipaddr) return false;
      if (Gbid != other.Gbid) return false;
      if (BeginTime != other.BeginTime) return false;
      if (EndTime != other.EndTime) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (hdr_ != null) hash ^= Hdr.GetHashCode();
      if (TransProto != 0) hash ^= TransProto.GetHashCode();
      if (Port != 0) hash ^= Port.GetHashCode();
      if (Ipaddr.Length != 0) hash ^= Ipaddr.GetHashCode();
      if (Gbid.Length != 0) hash ^= Gbid.GetHashCode();
      if (BeginTime.Length != 0) hash ^= BeginTime.GetHashCode();
      if (EndTime.Length != 0) hash ^= EndTime.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (hdr_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Hdr);
      }
      if (TransProto != 0) {
        output.WriteRawTag(16);
        output.WriteEnum((int) TransProto);
      }
      if (Port != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Port);
      }
      if (Ipaddr.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Ipaddr);
      }
      if (Gbid.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(Gbid);
      }
      if (BeginTime.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(BeginTime);
      }
      if (EndTime.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(EndTime);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (hdr_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Hdr);
      }
      if (TransProto != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) TransProto);
      }
      if (Port != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Port);
      }
      if (Ipaddr.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Ipaddr);
      }
      if (Gbid.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Gbid);
      }
      if (BeginTime.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(BeginTime);
      }
      if (EndTime.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(EndTime);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(StartPlaybackRequest other) {
      if (other == null) {
        return;
      }
      if (other.hdr_ != null) {
        if (hdr_ == null) {
          hdr_ = new global::MediaContract.Header();
        }
        Hdr.MergeFrom(other.Hdr);
      }
      if (other.TransProto != 0) {
        TransProto = other.TransProto;
      }
      if (other.Port != 0) {
        Port = other.Port;
      }
      if (other.Ipaddr.Length != 0) {
        Ipaddr = other.Ipaddr;
      }
      if (other.Gbid.Length != 0) {
        Gbid = other.Gbid;
      }
      if (other.BeginTime.Length != 0) {
        BeginTime = other.BeginTime;
      }
      if (other.EndTime.Length != 0) {
        EndTime = other.EndTime;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (hdr_ == null) {
              hdr_ = new global::MediaContract.Header();
            }
            input.ReadMessage(hdr_);
            break;
          }
          case 16: {
            transProto_ = (global::MediaContract.TransportProtocol) input.ReadEnum();
            break;
          }
          case 24: {
            Port = input.ReadInt32();
            break;
          }
          case 34: {
            Ipaddr = input.ReadString();
            break;
          }
          case 42: {
            Gbid = input.ReadString();
            break;
          }
          case 58: {
            BeginTime = input.ReadString();
            break;
          }
          case 66: {
            EndTime = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class StartPlaybackReply : pb::IMessage<StartPlaybackReply> {
    private static readonly pb::MessageParser<StartPlaybackReply> _parser = new pb::MessageParser<StartPlaybackReply>(() => new StartPlaybackReply());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<StartPlaybackReply> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::MediaContract.VideoSessionReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StartPlaybackReply() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StartPlaybackReply(StartPlaybackReply other) : this() {
      Hdr = other.hdr_ != null ? other.Hdr.Clone() : null;
      Status = other.status_ != null ? other.Status.Clone() : null;
      ipaddr_ = other.ipaddr_;
      port_ = other.port_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StartPlaybackReply Clone() {
      return new StartPlaybackReply(this);
    }

    /// <summary>Field number for the "hdr" field.</summary>
    public const int HdrFieldNumber = 1;
    private global::MediaContract.Header hdr_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::MediaContract.Header Hdr {
      get { return hdr_; }
      set {
        hdr_ = value;
      }
    }

    /// <summary>Field number for the "status" field.</summary>
    public const int StatusFieldNumber = 2;
    private global::MediaContract.Status status_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::MediaContract.Status Status {
      get { return status_; }
      set {
        status_ = value;
      }
    }

    /// <summary>Field number for the "ipaddr" field.</summary>
    public const int IpaddrFieldNumber = 3;
    private string ipaddr_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Ipaddr {
      get { return ipaddr_; }
      set {
        ipaddr_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "port" field.</summary>
    public const int PortFieldNumber = 4;
    private int port_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Port {
      get { return port_; }
      set {
        port_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as StartPlaybackReply);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(StartPlaybackReply other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Hdr, other.Hdr)) return false;
      if (!object.Equals(Status, other.Status)) return false;
      if (Ipaddr != other.Ipaddr) return false;
      if (Port != other.Port) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (hdr_ != null) hash ^= Hdr.GetHashCode();
      if (status_ != null) hash ^= Status.GetHashCode();
      if (Ipaddr.Length != 0) hash ^= Ipaddr.GetHashCode();
      if (Port != 0) hash ^= Port.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (hdr_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Hdr);
      }
      if (status_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Status);
      }
      if (Ipaddr.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Ipaddr);
      }
      if (Port != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(Port);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (hdr_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Hdr);
      }
      if (status_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Status);
      }
      if (Ipaddr.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Ipaddr);
      }
      if (Port != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Port);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(StartPlaybackReply other) {
      if (other == null) {
        return;
      }
      if (other.hdr_ != null) {
        if (hdr_ == null) {
          hdr_ = new global::MediaContract.Header();
        }
        Hdr.MergeFrom(other.Hdr);
      }
      if (other.status_ != null) {
        if (status_ == null) {
          status_ = new global::MediaContract.Status();
        }
        Status.MergeFrom(other.Status);
      }
      if (other.Ipaddr.Length != 0) {
        Ipaddr = other.Ipaddr;
      }
      if (other.Port != 0) {
        Port = other.Port;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (hdr_ == null) {
              hdr_ = new global::MediaContract.Header();
            }
            input.ReadMessage(hdr_);
            break;
          }
          case 18: {
            if (status_ == null) {
              status_ = new global::MediaContract.Status();
            }
            input.ReadMessage(status_);
            break;
          }
          case 26: {
            Ipaddr = input.ReadString();
            break;
          }
          case 32: {
            Port = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class StopRequest : pb::IMessage<StopRequest> {
    private static readonly pb::MessageParser<StopRequest> _parser = new pb::MessageParser<StopRequest>(() => new StopRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<StopRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::MediaContract.VideoSessionReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StopRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StopRequest(StopRequest other) : this() {
      Hdr = other.hdr_ != null ? other.Hdr.Clone() : null;
      gbid_ = other.gbid_;
      businessType_ = other.businessType_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StopRequest Clone() {
      return new StopRequest(this);
    }

    /// <summary>Field number for the "hdr" field.</summary>
    public const int HdrFieldNumber = 1;
    private global::MediaContract.Header hdr_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::MediaContract.Header Hdr {
      get { return hdr_; }
      set {
        hdr_ = value;
      }
    }

    /// <summary>Field number for the "gbid" field.</summary>
    public const int GbidFieldNumber = 2;
    private string gbid_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Gbid {
      get { return gbid_; }
      set {
        gbid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "business_type" field.</summary>
    public const int BusinessTypeFieldNumber = 3;
    private global::MediaContract.BusinessType businessType_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::MediaContract.BusinessType BusinessType {
      get { return businessType_; }
      set {
        businessType_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as StopRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(StopRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Hdr, other.Hdr)) return false;
      if (Gbid != other.Gbid) return false;
      if (BusinessType != other.BusinessType) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (hdr_ != null) hash ^= Hdr.GetHashCode();
      if (Gbid.Length != 0) hash ^= Gbid.GetHashCode();
      if (BusinessType != 0) hash ^= BusinessType.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (hdr_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Hdr);
      }
      if (Gbid.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Gbid);
      }
      if (BusinessType != 0) {
        output.WriteRawTag(24);
        output.WriteEnum((int) BusinessType);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (hdr_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Hdr);
      }
      if (Gbid.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Gbid);
      }
      if (BusinessType != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) BusinessType);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(StopRequest other) {
      if (other == null) {
        return;
      }
      if (other.hdr_ != null) {
        if (hdr_ == null) {
          hdr_ = new global::MediaContract.Header();
        }
        Hdr.MergeFrom(other.Hdr);
      }
      if (other.Gbid.Length != 0) {
        Gbid = other.Gbid;
      }
      if (other.BusinessType != 0) {
        BusinessType = other.BusinessType;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (hdr_ == null) {
              hdr_ = new global::MediaContract.Header();
            }
            input.ReadMessage(hdr_);
            break;
          }
          case 18: {
            Gbid = input.ReadString();
            break;
          }
          case 24: {
            businessType_ = (global::MediaContract.BusinessType) input.ReadEnum();
            break;
          }
        }
      }
    }

  }

  public sealed partial class StopReply : pb::IMessage<StopReply> {
    private static readonly pb::MessageParser<StopReply> _parser = new pb::MessageParser<StopReply>(() => new StopReply());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<StopReply> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::MediaContract.VideoSessionReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StopReply() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StopReply(StopReply other) : this() {
      Hdr = other.hdr_ != null ? other.Hdr.Clone() : null;
      Status = other.status_ != null ? other.Status.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StopReply Clone() {
      return new StopReply(this);
    }

    /// <summary>Field number for the "hdr" field.</summary>
    public const int HdrFieldNumber = 1;
    private global::MediaContract.Header hdr_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::MediaContract.Header Hdr {
      get { return hdr_; }
      set {
        hdr_ = value;
      }
    }

    /// <summary>Field number for the "status" field.</summary>
    public const int StatusFieldNumber = 2;
    private global::MediaContract.Status status_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::MediaContract.Status Status {
      get { return status_; }
      set {
        status_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as StopReply);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(StopReply other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Hdr, other.Hdr)) return false;
      if (!object.Equals(Status, other.Status)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (hdr_ != null) hash ^= Hdr.GetHashCode();
      if (status_ != null) hash ^= Status.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (hdr_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Hdr);
      }
      if (status_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Status);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (hdr_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Hdr);
      }
      if (status_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Status);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(StopReply other) {
      if (other == null) {
        return;
      }
      if (other.hdr_ != null) {
        if (hdr_ == null) {
          hdr_ = new global::MediaContract.Header();
        }
        Hdr.MergeFrom(other.Hdr);
      }
      if (other.status_ != null) {
        if (status_ == null) {
          status_ = new global::MediaContract.Status();
        }
        Status.MergeFrom(other.Status);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (hdr_ == null) {
              hdr_ = new global::MediaContract.Header();
            }
            input.ReadMessage(hdr_);
            break;
          }
          case 18: {
            if (status_ == null) {
              status_ = new global::MediaContract.Status();
            }
            input.ReadMessage(status_);
            break;
          }
        }
      }
    }

  }

  public sealed partial class KeepAliveRequest : pb::IMessage<KeepAliveRequest> {
    private static readonly pb::MessageParser<KeepAliveRequest> _parser = new pb::MessageParser<KeepAliveRequest>(() => new KeepAliveRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<KeepAliveRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::MediaContract.VideoSessionReflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public KeepAliveRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public KeepAliveRequest(KeepAliveRequest other) : this() {
      Hdr = other.hdr_ != null ? other.Hdr.Clone() : null;
      gbid_ = other.gbid_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public KeepAliveRequest Clone() {
      return new KeepAliveRequest(this);
    }

    /// <summary>Field number for the "hdr" field.</summary>
    public const int HdrFieldNumber = 1;
    private global::MediaContract.Header hdr_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::MediaContract.Header Hdr {
      get { return hdr_; }
      set {
        hdr_ = value;
      }
    }

    /// <summary>Field number for the "gbid" field.</summary>
    public const int GbidFieldNumber = 2;
    private string gbid_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Gbid {
      get { return gbid_; }
      set {
        gbid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as KeepAliveRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(KeepAliveRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Hdr, other.Hdr)) return false;
      if (Gbid != other.Gbid) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (hdr_ != null) hash ^= Hdr.GetHashCode();
      if (Gbid.Length != 0) hash ^= Gbid.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (hdr_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Hdr);
      }
      if (Gbid.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Gbid);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (hdr_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Hdr);
      }
      if (Gbid.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Gbid);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(KeepAliveRequest other) {
      if (other == null) {
        return;
      }
      if (other.hdr_ != null) {
        if (hdr_ == null) {
          hdr_ = new global::MediaContract.Header();
        }
        Hdr.MergeFrom(other.Hdr);
      }
      if (other.Gbid.Length != 0) {
        Gbid = other.Gbid;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (hdr_ == null) {
              hdr_ = new global::MediaContract.Header();
            }
            input.ReadMessage(hdr_);
            break;
          }
          case 18: {
            Gbid = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class KeepAliveReply : pb::IMessage<KeepAliveReply> {
    private static readonly pb::MessageParser<KeepAliveReply> _parser = new pb::MessageParser<KeepAliveReply>(() => new KeepAliveReply());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<KeepAliveReply> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::MediaContract.VideoSessionReflection.Descriptor.MessageTypes[9]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public KeepAliveReply() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public KeepAliveReply(KeepAliveReply other) : this() {
      Hdr = other.hdr_ != null ? other.Hdr.Clone() : null;
      Status = other.status_ != null ? other.Status.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public KeepAliveReply Clone() {
      return new KeepAliveReply(this);
    }

    /// <summary>Field number for the "hdr" field.</summary>
    public const int HdrFieldNumber = 1;
    private global::MediaContract.Header hdr_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::MediaContract.Header Hdr {
      get { return hdr_; }
      set {
        hdr_ = value;
      }
    }

    /// <summary>Field number for the "status" field.</summary>
    public const int StatusFieldNumber = 2;
    private global::MediaContract.Status status_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::MediaContract.Status Status {
      get { return status_; }
      set {
        status_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as KeepAliveReply);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(KeepAliveReply other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Hdr, other.Hdr)) return false;
      if (!object.Equals(Status, other.Status)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (hdr_ != null) hash ^= Hdr.GetHashCode();
      if (status_ != null) hash ^= Status.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (hdr_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Hdr);
      }
      if (status_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Status);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (hdr_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Hdr);
      }
      if (status_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Status);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(KeepAliveReply other) {
      if (other == null) {
        return;
      }
      if (other.hdr_ != null) {
        if (hdr_ == null) {
          hdr_ = new global::MediaContract.Header();
        }
        Hdr.MergeFrom(other.Hdr);
      }
      if (other.status_ != null) {
        if (status_ == null) {
          status_ = new global::MediaContract.Status();
        }
        Status.MergeFrom(other.Status);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (hdr_ == null) {
              hdr_ = new global::MediaContract.Header();
            }
            input.ReadMessage(hdr_);
            break;
          }
          case 18: {
            if (status_ == null) {
              status_ = new global::MediaContract.Status();
            }
            input.ReadMessage(status_);
            break;
          }
        }
      }
    }

  }

  public sealed partial class BackVideoStopRequest : pb::IMessage<BackVideoStopRequest> {
    private static readonly pb::MessageParser<BackVideoStopRequest> _parser = new pb::MessageParser<BackVideoStopRequest>(() => new BackVideoStopRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<BackVideoStopRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::MediaContract.VideoSessionReflection.Descriptor.MessageTypes[10]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BackVideoStopRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BackVideoStopRequest(BackVideoStopRequest other) : this() {
      Hdr = other.hdr_ != null ? other.Hdr.Clone() : null;
      gbid_ = other.gbid_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BackVideoStopRequest Clone() {
      return new BackVideoStopRequest(this);
    }

    /// <summary>Field number for the "hdr" field.</summary>
    public const int HdrFieldNumber = 1;
    private global::MediaContract.Header hdr_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::MediaContract.Header Hdr {
      get { return hdr_; }
      set {
        hdr_ = value;
      }
    }

    /// <summary>Field number for the "gbid" field.</summary>
    public const int GbidFieldNumber = 2;
    private string gbid_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Gbid {
      get { return gbid_; }
      set {
        gbid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as BackVideoStopRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(BackVideoStopRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Hdr, other.Hdr)) return false;
      if (Gbid != other.Gbid) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (hdr_ != null) hash ^= Hdr.GetHashCode();
      if (Gbid.Length != 0) hash ^= Gbid.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (hdr_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Hdr);
      }
      if (Gbid.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Gbid);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (hdr_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Hdr);
      }
      if (Gbid.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Gbid);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(BackVideoStopRequest other) {
      if (other == null) {
        return;
      }
      if (other.hdr_ != null) {
        if (hdr_ == null) {
          hdr_ = new global::MediaContract.Header();
        }
        Hdr.MergeFrom(other.Hdr);
      }
      if (other.Gbid.Length != 0) {
        Gbid = other.Gbid;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (hdr_ == null) {
              hdr_ = new global::MediaContract.Header();
            }
            input.ReadMessage(hdr_);
            break;
          }
          case 18: {
            Gbid = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class BackVideoStopReply : pb::IMessage<BackVideoStopReply> {
    private static readonly pb::MessageParser<BackVideoStopReply> _parser = new pb::MessageParser<BackVideoStopReply>(() => new BackVideoStopReply());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<BackVideoStopReply> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::MediaContract.VideoSessionReflection.Descriptor.MessageTypes[11]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BackVideoStopReply() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BackVideoStopReply(BackVideoStopReply other) : this() {
      Hdr = other.hdr_ != null ? other.Hdr.Clone() : null;
      Status = other.status_ != null ? other.Status.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BackVideoStopReply Clone() {
      return new BackVideoStopReply(this);
    }

    /// <summary>Field number for the "hdr" field.</summary>
    public const int HdrFieldNumber = 1;
    private global::MediaContract.Header hdr_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::MediaContract.Header Hdr {
      get { return hdr_; }
      set {
        hdr_ = value;
      }
    }

    /// <summary>Field number for the "status" field.</summary>
    public const int StatusFieldNumber = 2;
    private global::MediaContract.Status status_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::MediaContract.Status Status {
      get { return status_; }
      set {
        status_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as BackVideoStopReply);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(BackVideoStopReply other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Hdr, other.Hdr)) return false;
      if (!object.Equals(Status, other.Status)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (hdr_ != null) hash ^= Hdr.GetHashCode();
      if (status_ != null) hash ^= Status.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (hdr_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Hdr);
      }
      if (status_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Status);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (hdr_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Hdr);
      }
      if (status_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Status);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(BackVideoStopReply other) {
      if (other == null) {
        return;
      }
      if (other.hdr_ != null) {
        if (hdr_ == null) {
          hdr_ = new global::MediaContract.Header();
        }
        Hdr.MergeFrom(other.Hdr);
      }
      if (other.status_ != null) {
        if (status_ == null) {
          status_ = new global::MediaContract.Status();
        }
        Status.MergeFrom(other.Status);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (hdr_ == null) {
              hdr_ = new global::MediaContract.Header();
            }
            input.ReadMessage(hdr_);
            break;
          }
          case 18: {
            if (status_ == null) {
              status_ = new global::MediaContract.Status();
            }
            input.ReadMessage(status_);
            break;
          }
        }
      }
    }

  }

  public sealed partial class BackVideoSpeedRequest : pb::IMessage<BackVideoSpeedRequest> {
    private static readonly pb::MessageParser<BackVideoSpeedRequest> _parser = new pb::MessageParser<BackVideoSpeedRequest>(() => new BackVideoSpeedRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<BackVideoSpeedRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::MediaContract.VideoSessionReflection.Descriptor.MessageTypes[12]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BackVideoSpeedRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BackVideoSpeedRequest(BackVideoSpeedRequest other) : this() {
      Hdr = other.hdr_ != null ? other.Hdr.Clone() : null;
      gbid_ = other.gbid_;
      scale_ = other.scale_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BackVideoSpeedRequest Clone() {
      return new BackVideoSpeedRequest(this);
    }

    /// <summary>Field number for the "hdr" field.</summary>
    public const int HdrFieldNumber = 1;
    private global::MediaContract.Header hdr_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::MediaContract.Header Hdr {
      get { return hdr_; }
      set {
        hdr_ = value;
      }
    }

    /// <summary>Field number for the "gbid" field.</summary>
    public const int GbidFieldNumber = 2;
    private string gbid_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Gbid {
      get { return gbid_; }
      set {
        gbid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "scale" field.</summary>
    public const int ScaleFieldNumber = 3;
    private float scale_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Scale {
      get { return scale_; }
      set {
        scale_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as BackVideoSpeedRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(BackVideoSpeedRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Hdr, other.Hdr)) return false;
      if (Gbid != other.Gbid) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Scale, other.Scale)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (hdr_ != null) hash ^= Hdr.GetHashCode();
      if (Gbid.Length != 0) hash ^= Gbid.GetHashCode();
      if (Scale != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Scale);
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (hdr_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Hdr);
      }
      if (Gbid.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Gbid);
      }
      if (Scale != 0F) {
        output.WriteRawTag(29);
        output.WriteFloat(Scale);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (hdr_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Hdr);
      }
      if (Gbid.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Gbid);
      }
      if (Scale != 0F) {
        size += 1 + 4;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(BackVideoSpeedRequest other) {
      if (other == null) {
        return;
      }
      if (other.hdr_ != null) {
        if (hdr_ == null) {
          hdr_ = new global::MediaContract.Header();
        }
        Hdr.MergeFrom(other.Hdr);
      }
      if (other.Gbid.Length != 0) {
        Gbid = other.Gbid;
      }
      if (other.Scale != 0F) {
        Scale = other.Scale;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (hdr_ == null) {
              hdr_ = new global::MediaContract.Header();
            }
            input.ReadMessage(hdr_);
            break;
          }
          case 18: {
            Gbid = input.ReadString();
            break;
          }
          case 29: {
            Scale = input.ReadFloat();
            break;
          }
        }
      }
    }

  }

  public sealed partial class BackVideoSpeedReply : pb::IMessage<BackVideoSpeedReply> {
    private static readonly pb::MessageParser<BackVideoSpeedReply> _parser = new pb::MessageParser<BackVideoSpeedReply>(() => new BackVideoSpeedReply());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<BackVideoSpeedReply> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::MediaContract.VideoSessionReflection.Descriptor.MessageTypes[13]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BackVideoSpeedReply() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BackVideoSpeedReply(BackVideoSpeedReply other) : this() {
      Hdr = other.hdr_ != null ? other.Hdr.Clone() : null;
      Status = other.status_ != null ? other.Status.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BackVideoSpeedReply Clone() {
      return new BackVideoSpeedReply(this);
    }

    /// <summary>Field number for the "hdr" field.</summary>
    public const int HdrFieldNumber = 1;
    private global::MediaContract.Header hdr_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::MediaContract.Header Hdr {
      get { return hdr_; }
      set {
        hdr_ = value;
      }
    }

    /// <summary>Field number for the "status" field.</summary>
    public const int StatusFieldNumber = 2;
    private global::MediaContract.Status status_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::MediaContract.Status Status {
      get { return status_; }
      set {
        status_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as BackVideoSpeedReply);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(BackVideoSpeedReply other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Hdr, other.Hdr)) return false;
      if (!object.Equals(Status, other.Status)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (hdr_ != null) hash ^= Hdr.GetHashCode();
      if (status_ != null) hash ^= Status.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (hdr_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Hdr);
      }
      if (status_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Status);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (hdr_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Hdr);
      }
      if (status_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Status);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(BackVideoSpeedReply other) {
      if (other == null) {
        return;
      }
      if (other.hdr_ != null) {
        if (hdr_ == null) {
          hdr_ = new global::MediaContract.Header();
        }
        Hdr.MergeFrom(other.Hdr);
      }
      if (other.status_ != null) {
        if (status_ == null) {
          status_ = new global::MediaContract.Status();
        }
        Status.MergeFrom(other.Status);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (hdr_ == null) {
              hdr_ = new global::MediaContract.Header();
            }
            input.ReadMessage(hdr_);
            break;
          }
          case 18: {
            if (status_ == null) {
              status_ = new global::MediaContract.Status();
            }
            input.ReadMessage(status_);
            break;
          }
        }
      }
    }

  }

  public sealed partial class BackVideoPauseRequest : pb::IMessage<BackVideoPauseRequest> {
    private static readonly pb::MessageParser<BackVideoPauseRequest> _parser = new pb::MessageParser<BackVideoPauseRequest>(() => new BackVideoPauseRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<BackVideoPauseRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::MediaContract.VideoSessionReflection.Descriptor.MessageTypes[14]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BackVideoPauseRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BackVideoPauseRequest(BackVideoPauseRequest other) : this() {
      Hdr = other.hdr_ != null ? other.Hdr.Clone() : null;
      gbid_ = other.gbid_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BackVideoPauseRequest Clone() {
      return new BackVideoPauseRequest(this);
    }

    /// <summary>Field number for the "hdr" field.</summary>
    public const int HdrFieldNumber = 1;
    private global::MediaContract.Header hdr_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::MediaContract.Header Hdr {
      get { return hdr_; }
      set {
        hdr_ = value;
      }
    }

    /// <summary>Field number for the "gbid" field.</summary>
    public const int GbidFieldNumber = 2;
    private string gbid_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Gbid {
      get { return gbid_; }
      set {
        gbid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as BackVideoPauseRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(BackVideoPauseRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Hdr, other.Hdr)) return false;
      if (Gbid != other.Gbid) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (hdr_ != null) hash ^= Hdr.GetHashCode();
      if (Gbid.Length != 0) hash ^= Gbid.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (hdr_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Hdr);
      }
      if (Gbid.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Gbid);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (hdr_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Hdr);
      }
      if (Gbid.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Gbid);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(BackVideoPauseRequest other) {
      if (other == null) {
        return;
      }
      if (other.hdr_ != null) {
        if (hdr_ == null) {
          hdr_ = new global::MediaContract.Header();
        }
        Hdr.MergeFrom(other.Hdr);
      }
      if (other.Gbid.Length != 0) {
        Gbid = other.Gbid;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (hdr_ == null) {
              hdr_ = new global::MediaContract.Header();
            }
            input.ReadMessage(hdr_);
            break;
          }
          case 18: {
            Gbid = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class BackVideoPauseReply : pb::IMessage<BackVideoPauseReply> {
    private static readonly pb::MessageParser<BackVideoPauseReply> _parser = new pb::MessageParser<BackVideoPauseReply>(() => new BackVideoPauseReply());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<BackVideoPauseReply> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::MediaContract.VideoSessionReflection.Descriptor.MessageTypes[15]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BackVideoPauseReply() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BackVideoPauseReply(BackVideoPauseReply other) : this() {
      Hdr = other.hdr_ != null ? other.Hdr.Clone() : null;
      Status = other.status_ != null ? other.Status.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BackVideoPauseReply Clone() {
      return new BackVideoPauseReply(this);
    }

    /// <summary>Field number for the "hdr" field.</summary>
    public const int HdrFieldNumber = 1;
    private global::MediaContract.Header hdr_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::MediaContract.Header Hdr {
      get { return hdr_; }
      set {
        hdr_ = value;
      }
    }

    /// <summary>Field number for the "status" field.</summary>
    public const int StatusFieldNumber = 2;
    private global::MediaContract.Status status_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::MediaContract.Status Status {
      get { return status_; }
      set {
        status_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as BackVideoPauseReply);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(BackVideoPauseReply other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Hdr, other.Hdr)) return false;
      if (!object.Equals(Status, other.Status)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (hdr_ != null) hash ^= Hdr.GetHashCode();
      if (status_ != null) hash ^= Status.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (hdr_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Hdr);
      }
      if (status_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Status);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (hdr_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Hdr);
      }
      if (status_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Status);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(BackVideoPauseReply other) {
      if (other == null) {
        return;
      }
      if (other.hdr_ != null) {
        if (hdr_ == null) {
          hdr_ = new global::MediaContract.Header();
        }
        Hdr.MergeFrom(other.Hdr);
      }
      if (other.status_ != null) {
        if (status_ == null) {
          status_ = new global::MediaContract.Status();
        }
        Status.MergeFrom(other.Status);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (hdr_ == null) {
              hdr_ = new global::MediaContract.Header();
            }
            input.ReadMessage(hdr_);
            break;
          }
          case 18: {
            if (status_ == null) {
              status_ = new global::MediaContract.Status();
            }
            input.ReadMessage(status_);
            break;
          }
        }
      }
    }

  }

  public sealed partial class BackVideoContinueRequest : pb::IMessage<BackVideoContinueRequest> {
    private static readonly pb::MessageParser<BackVideoContinueRequest> _parser = new pb::MessageParser<BackVideoContinueRequest>(() => new BackVideoContinueRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<BackVideoContinueRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::MediaContract.VideoSessionReflection.Descriptor.MessageTypes[16]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BackVideoContinueRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BackVideoContinueRequest(BackVideoContinueRequest other) : this() {
      Hdr = other.hdr_ != null ? other.Hdr.Clone() : null;
      gbid_ = other.gbid_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BackVideoContinueRequest Clone() {
      return new BackVideoContinueRequest(this);
    }

    /// <summary>Field number for the "hdr" field.</summary>
    public const int HdrFieldNumber = 1;
    private global::MediaContract.Header hdr_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::MediaContract.Header Hdr {
      get { return hdr_; }
      set {
        hdr_ = value;
      }
    }

    /// <summary>Field number for the "gbid" field.</summary>
    public const int GbidFieldNumber = 2;
    private string gbid_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Gbid {
      get { return gbid_; }
      set {
        gbid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as BackVideoContinueRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(BackVideoContinueRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Hdr, other.Hdr)) return false;
      if (Gbid != other.Gbid) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (hdr_ != null) hash ^= Hdr.GetHashCode();
      if (Gbid.Length != 0) hash ^= Gbid.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (hdr_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Hdr);
      }
      if (Gbid.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Gbid);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (hdr_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Hdr);
      }
      if (Gbid.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Gbid);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(BackVideoContinueRequest other) {
      if (other == null) {
        return;
      }
      if (other.hdr_ != null) {
        if (hdr_ == null) {
          hdr_ = new global::MediaContract.Header();
        }
        Hdr.MergeFrom(other.Hdr);
      }
      if (other.Gbid.Length != 0) {
        Gbid = other.Gbid;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (hdr_ == null) {
              hdr_ = new global::MediaContract.Header();
            }
            input.ReadMessage(hdr_);
            break;
          }
          case 18: {
            Gbid = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class BackVideoContinueReply : pb::IMessage<BackVideoContinueReply> {
    private static readonly pb::MessageParser<BackVideoContinueReply> _parser = new pb::MessageParser<BackVideoContinueReply>(() => new BackVideoContinueReply());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<BackVideoContinueReply> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::MediaContract.VideoSessionReflection.Descriptor.MessageTypes[17]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BackVideoContinueReply() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BackVideoContinueReply(BackVideoContinueReply other) : this() {
      Hdr = other.hdr_ != null ? other.Hdr.Clone() : null;
      Status = other.status_ != null ? other.Status.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BackVideoContinueReply Clone() {
      return new BackVideoContinueReply(this);
    }

    /// <summary>Field number for the "hdr" field.</summary>
    public const int HdrFieldNumber = 1;
    private global::MediaContract.Header hdr_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::MediaContract.Header Hdr {
      get { return hdr_; }
      set {
        hdr_ = value;
      }
    }

    /// <summary>Field number for the "status" field.</summary>
    public const int StatusFieldNumber = 2;
    private global::MediaContract.Status status_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::MediaContract.Status Status {
      get { return status_; }
      set {
        status_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as BackVideoContinueReply);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(BackVideoContinueReply other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Hdr, other.Hdr)) return false;
      if (!object.Equals(Status, other.Status)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (hdr_ != null) hash ^= Hdr.GetHashCode();
      if (status_ != null) hash ^= Status.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (hdr_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Hdr);
      }
      if (status_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Status);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (hdr_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Hdr);
      }
      if (status_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Status);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(BackVideoContinueReply other) {
      if (other == null) {
        return;
      }
      if (other.hdr_ != null) {
        if (hdr_ == null) {
          hdr_ = new global::MediaContract.Header();
        }
        Hdr.MergeFrom(other.Hdr);
      }
      if (other.status_ != null) {
        if (status_ == null) {
          status_ = new global::MediaContract.Status();
        }
        Status.MergeFrom(other.Status);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (hdr_ == null) {
              hdr_ = new global::MediaContract.Header();
            }
            input.ReadMessage(hdr_);
            break;
          }
          case 18: {
            if (status_ == null) {
              status_ = new global::MediaContract.Status();
            }
            input.ReadMessage(status_);
            break;
          }
        }
      }
    }

  }

  public sealed partial class BackVideoPositionRequest : pb::IMessage<BackVideoPositionRequest> {
    private static readonly pb::MessageParser<BackVideoPositionRequest> _parser = new pb::MessageParser<BackVideoPositionRequest>(() => new BackVideoPositionRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<BackVideoPositionRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::MediaContract.VideoSessionReflection.Descriptor.MessageTypes[18]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BackVideoPositionRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BackVideoPositionRequest(BackVideoPositionRequest other) : this() {
      Hdr = other.hdr_ != null ? other.Hdr.Clone() : null;
      gbid_ = other.gbid_;
      range_ = other.range_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BackVideoPositionRequest Clone() {
      return new BackVideoPositionRequest(this);
    }

    /// <summary>Field number for the "hdr" field.</summary>
    public const int HdrFieldNumber = 1;
    private global::MediaContract.Header hdr_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::MediaContract.Header Hdr {
      get { return hdr_; }
      set {
        hdr_ = value;
      }
    }

    /// <summary>Field number for the "gbid" field.</summary>
    public const int GbidFieldNumber = 2;
    private string gbid_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Gbid {
      get { return gbid_; }
      set {
        gbid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "range" field.</summary>
    public const int RangeFieldNumber = 3;
    private int range_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Range {
      get { return range_; }
      set {
        range_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as BackVideoPositionRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(BackVideoPositionRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Hdr, other.Hdr)) return false;
      if (Gbid != other.Gbid) return false;
      if (Range != other.Range) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (hdr_ != null) hash ^= Hdr.GetHashCode();
      if (Gbid.Length != 0) hash ^= Gbid.GetHashCode();
      if (Range != 0) hash ^= Range.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (hdr_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Hdr);
      }
      if (Gbid.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Gbid);
      }
      if (Range != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Range);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (hdr_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Hdr);
      }
      if (Gbid.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Gbid);
      }
      if (Range != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Range);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(BackVideoPositionRequest other) {
      if (other == null) {
        return;
      }
      if (other.hdr_ != null) {
        if (hdr_ == null) {
          hdr_ = new global::MediaContract.Header();
        }
        Hdr.MergeFrom(other.Hdr);
      }
      if (other.Gbid.Length != 0) {
        Gbid = other.Gbid;
      }
      if (other.Range != 0) {
        Range = other.Range;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (hdr_ == null) {
              hdr_ = new global::MediaContract.Header();
            }
            input.ReadMessage(hdr_);
            break;
          }
          case 18: {
            Gbid = input.ReadString();
            break;
          }
          case 24: {
            Range = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class BackVideoPositionReply : pb::IMessage<BackVideoPositionReply> {
    private static readonly pb::MessageParser<BackVideoPositionReply> _parser = new pb::MessageParser<BackVideoPositionReply>(() => new BackVideoPositionReply());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<BackVideoPositionReply> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::MediaContract.VideoSessionReflection.Descriptor.MessageTypes[19]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BackVideoPositionReply() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BackVideoPositionReply(BackVideoPositionReply other) : this() {
      Hdr = other.hdr_ != null ? other.Hdr.Clone() : null;
      Status = other.status_ != null ? other.Status.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BackVideoPositionReply Clone() {
      return new BackVideoPositionReply(this);
    }

    /// <summary>Field number for the "hdr" field.</summary>
    public const int HdrFieldNumber = 1;
    private global::MediaContract.Header hdr_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::MediaContract.Header Hdr {
      get { return hdr_; }
      set {
        hdr_ = value;
      }
    }

    /// <summary>Field number for the "status" field.</summary>
    public const int StatusFieldNumber = 2;
    private global::MediaContract.Status status_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::MediaContract.Status Status {
      get { return status_; }
      set {
        status_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as BackVideoPositionReply);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(BackVideoPositionReply other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Hdr, other.Hdr)) return false;
      if (!object.Equals(Status, other.Status)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (hdr_ != null) hash ^= Hdr.GetHashCode();
      if (status_ != null) hash ^= Status.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (hdr_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Hdr);
      }
      if (status_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Status);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (hdr_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Hdr);
      }
      if (status_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Status);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(BackVideoPositionReply other) {
      if (other == null) {
        return;
      }
      if (other.hdr_ != null) {
        if (hdr_ == null) {
          hdr_ = new global::MediaContract.Header();
        }
        Hdr.MergeFrom(other.Hdr);
      }
      if (other.status_ != null) {
        if (status_ == null) {
          status_ = new global::MediaContract.Status();
        }
        Status.MergeFrom(other.Status);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (hdr_ == null) {
              hdr_ = new global::MediaContract.Header();
            }
            input.ReadMessage(hdr_);
            break;
          }
          case 18: {
            if (status_ == null) {
              status_ = new global::MediaContract.Status();
            }
            input.ReadMessage(status_);
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
