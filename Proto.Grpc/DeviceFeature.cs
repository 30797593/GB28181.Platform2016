// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: device_feature.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace GrpcDeviceFeature {

  /// <summary>Holder for reflection information generated from device_feature.proto</summary>
  public static partial class DeviceFeatureReflection {

    #region Descriptor
    /// <summary>File descriptor for device_feature.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static DeviceFeatureReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChRkZXZpY2VfZmVhdHVyZS5wcm90bxIRR3JwY0RldmljZUZlYXR1cmUiKwoX",
            "RGV2aWNlU3RhdGVRdWVyeVJlcXVlc3QSEAoIZGV2aWNlaWQYASABKAkiSgoV",
            "RGV2aWNlU3RhdGVRdWVyeVJlcGx5EjEKDERldmljZVN0YXR1cxgBIAEoCzIb",
            "LkdycGNEZXZpY2VGZWF0dXJlLkluc3RhbmNlIpkBCghJbnN0YW5jZRIvCgdD",
            "bWRUeXBlGAEgASgOMh4uR3JwY0RldmljZUZlYXR1cmUuQ29tbWFuZFR5cGUS",
            "CgoCU04YAiABKAUSEAoIRGV2aWNlSUQYAyABKAkSDgoGUmVzdWx0GAQgASgJ",
            "Eg4KBk9ubGluZRgFIAEoCRIOCgZTdGF0dXMYBiABKAkSDgoGUmVhc29uGAcg",
            "ASgJKpcCCgtDb21tYW5kVHlwZRILCgdVbmtub3duEAASDQoJS2VlcGFsaXZl",
            "EAESCwoHQ2F0YWxvZxACEggKBFBsYXkQAxIMCghQbGF5YmFjaxAEEhEKDURl",
            "dmljZUNvbnRyb2wQBRIJCgVBbGFybRAGEg4KCkRldmljZUluZm8QBxIQCgxE",
            "ZXZpY2VTdGF0dXMQCBIOCgpSZWNvcmRJbmZvEAkSDAoIRG93bmxvYWQQChIS",
            "Cg5Db25maWdEb3dubG9hZBALEg0KCUJyb2FkY2FzdBAMEg8KC1ByZXNldFF1",
            "ZXJ5EA0SEgoOTW9iaWxlUG9zaXRpb24QDhIQCgxEZXZpY2VDb25maWcQDxIP",
            "CgtNZWRpYVN0YXR1cxAQMnsKDURldmljZUZlYXR1cmUSagoQRGV2aWNlU3Rh",
            "dGVRdWVyeRIqLkdycGNEZXZpY2VGZWF0dXJlLkRldmljZVN0YXRlUXVlcnlS",
            "ZXF1ZXN0GiguR3JwY0RldmljZUZlYXR1cmUuRGV2aWNlU3RhdGVRdWVyeVJl",
            "cGx5IgBiBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(new[] {typeof(global::GrpcDeviceFeature.CommandType), }, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::GrpcDeviceFeature.DeviceStateQueryRequest), global::GrpcDeviceFeature.DeviceStateQueryRequest.Parser, new[]{ "Deviceid" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GrpcDeviceFeature.DeviceStateQueryReply), global::GrpcDeviceFeature.DeviceStateQueryReply.Parser, new[]{ "DeviceStatus" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GrpcDeviceFeature.Instance), global::GrpcDeviceFeature.Instance.Parser, new[]{ "CmdType", "SN", "DeviceID", "Result", "Online", "Status", "Reason" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Enums
  public enum CommandType {
    [pbr::OriginalName("Unknown")] Unknown = 0,
    [pbr::OriginalName("Keepalive")] Keepalive = 1,
    [pbr::OriginalName("Catalog")] Catalog = 2,
    [pbr::OriginalName("Play")] Play = 3,
    [pbr::OriginalName("Playback")] Playback = 4,
    [pbr::OriginalName("DeviceControl")] DeviceControl = 5,
    [pbr::OriginalName("Alarm")] Alarm = 6,
    [pbr::OriginalName("DeviceInfo")] DeviceInfo = 7,
    [pbr::OriginalName("DeviceStatus")] DeviceStatus = 8,
    [pbr::OriginalName("RecordInfo")] RecordInfo = 9,
    [pbr::OriginalName("Download")] Download = 10,
    [pbr::OriginalName("ConfigDownload")] ConfigDownload = 11,
    [pbr::OriginalName("Broadcast")] Broadcast = 12,
    [pbr::OriginalName("PresetQuery")] PresetQuery = 13,
    [pbr::OriginalName("MobilePosition")] MobilePosition = 14,
    [pbr::OriginalName("DeviceConfig")] DeviceConfig = 15,
    [pbr::OriginalName("MediaStatus")] MediaStatus = 16,
  }

  #endregion

  #region Messages
  /// <summary>
  /// The request message.
  /// </summary>
  public sealed partial class DeviceStateQueryRequest : pb::IMessage<DeviceStateQueryRequest> {
    private static readonly pb::MessageParser<DeviceStateQueryRequest> _parser = new pb::MessageParser<DeviceStateQueryRequest>(() => new DeviceStateQueryRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DeviceStateQueryRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GrpcDeviceFeature.DeviceFeatureReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeviceStateQueryRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeviceStateQueryRequest(DeviceStateQueryRequest other) : this() {
      deviceid_ = other.deviceid_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeviceStateQueryRequest Clone() {
      return new DeviceStateQueryRequest(this);
    }

    /// <summary>Field number for the "deviceid" field.</summary>
    public const int DeviceidFieldNumber = 1;
    private string deviceid_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Deviceid {
      get { return deviceid_; }
      set {
        deviceid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DeviceStateQueryRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DeviceStateQueryRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Deviceid != other.Deviceid) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Deviceid.Length != 0) hash ^= Deviceid.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Deviceid.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Deviceid);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Deviceid.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Deviceid);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DeviceStateQueryRequest other) {
      if (other == null) {
        return;
      }
      if (other.Deviceid.Length != 0) {
        Deviceid = other.Deviceid;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Deviceid = input.ReadString();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// The response message.
  /// </summary>
  public sealed partial class DeviceStateQueryReply : pb::IMessage<DeviceStateQueryReply> {
    private static readonly pb::MessageParser<DeviceStateQueryReply> _parser = new pb::MessageParser<DeviceStateQueryReply>(() => new DeviceStateQueryReply());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DeviceStateQueryReply> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GrpcDeviceFeature.DeviceFeatureReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeviceStateQueryReply() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeviceStateQueryReply(DeviceStateQueryReply other) : this() {
      DeviceStatus = other.deviceStatus_ != null ? other.DeviceStatus.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeviceStateQueryReply Clone() {
      return new DeviceStateQueryReply(this);
    }

    /// <summary>Field number for the "DeviceStatus" field.</summary>
    public const int DeviceStatusFieldNumber = 1;
    private global::GrpcDeviceFeature.Instance deviceStatus_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GrpcDeviceFeature.Instance DeviceStatus {
      get { return deviceStatus_; }
      set {
        deviceStatus_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DeviceStateQueryReply);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DeviceStateQueryReply other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(DeviceStatus, other.DeviceStatus)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (deviceStatus_ != null) hash ^= DeviceStatus.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (deviceStatus_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(DeviceStatus);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (deviceStatus_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(DeviceStatus);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DeviceStateQueryReply other) {
      if (other == null) {
        return;
      }
      if (other.deviceStatus_ != null) {
        if (deviceStatus_ == null) {
          deviceStatus_ = new global::GrpcDeviceFeature.Instance();
        }
        DeviceStatus.MergeFrom(other.DeviceStatus);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (deviceStatus_ == null) {
              deviceStatus_ = new global::GrpcDeviceFeature.Instance();
            }
            input.ReadMessage(deviceStatus_);
            break;
          }
        }
      }
    }

  }

  public sealed partial class Instance : pb::IMessage<Instance> {
    private static readonly pb::MessageParser<Instance> _parser = new pb::MessageParser<Instance>(() => new Instance());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Instance> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GrpcDeviceFeature.DeviceFeatureReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Instance() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Instance(Instance other) : this() {
      cmdType_ = other.cmdType_;
      sN_ = other.sN_;
      deviceID_ = other.deviceID_;
      result_ = other.result_;
      online_ = other.online_;
      status_ = other.status_;
      reason_ = other.reason_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Instance Clone() {
      return new Instance(this);
    }

    /// <summary>Field number for the "CmdType" field.</summary>
    public const int CmdTypeFieldNumber = 1;
    private global::GrpcDeviceFeature.CommandType cmdType_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GrpcDeviceFeature.CommandType CmdType {
      get { return cmdType_; }
      set {
        cmdType_ = value;
      }
    }

    /// <summary>Field number for the "SN" field.</summary>
    public const int SNFieldNumber = 2;
    private int sN_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int SN {
      get { return sN_; }
      set {
        sN_ = value;
      }
    }

    /// <summary>Field number for the "DeviceID" field.</summary>
    public const int DeviceIDFieldNumber = 3;
    private string deviceID_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string DeviceID {
      get { return deviceID_; }
      set {
        deviceID_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Result" field.</summary>
    public const int ResultFieldNumber = 4;
    private string result_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Result {
      get { return result_; }
      set {
        result_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Online" field.</summary>
    public const int OnlineFieldNumber = 5;
    private string online_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Online {
      get { return online_; }
      set {
        online_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Status" field.</summary>
    public const int StatusFieldNumber = 6;
    private string status_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Status {
      get { return status_; }
      set {
        status_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Reason" field.</summary>
    public const int ReasonFieldNumber = 7;
    private string reason_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Reason {
      get { return reason_; }
      set {
        reason_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Instance);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Instance other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (CmdType != other.CmdType) return false;
      if (SN != other.SN) return false;
      if (DeviceID != other.DeviceID) return false;
      if (Result != other.Result) return false;
      if (Online != other.Online) return false;
      if (Status != other.Status) return false;
      if (Reason != other.Reason) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (CmdType != 0) hash ^= CmdType.GetHashCode();
      if (SN != 0) hash ^= SN.GetHashCode();
      if (DeviceID.Length != 0) hash ^= DeviceID.GetHashCode();
      if (Result.Length != 0) hash ^= Result.GetHashCode();
      if (Online.Length != 0) hash ^= Online.GetHashCode();
      if (Status.Length != 0) hash ^= Status.GetHashCode();
      if (Reason.Length != 0) hash ^= Reason.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (CmdType != 0) {
        output.WriteRawTag(8);
        output.WriteEnum((int) CmdType);
      }
      if (SN != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(SN);
      }
      if (DeviceID.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(DeviceID);
      }
      if (Result.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Result);
      }
      if (Online.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(Online);
      }
      if (Status.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(Status);
      }
      if (Reason.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(Reason);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (CmdType != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) CmdType);
      }
      if (SN != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(SN);
      }
      if (DeviceID.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(DeviceID);
      }
      if (Result.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Result);
      }
      if (Online.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Online);
      }
      if (Status.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Status);
      }
      if (Reason.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Reason);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Instance other) {
      if (other == null) {
        return;
      }
      if (other.CmdType != 0) {
        CmdType = other.CmdType;
      }
      if (other.SN != 0) {
        SN = other.SN;
      }
      if (other.DeviceID.Length != 0) {
        DeviceID = other.DeviceID;
      }
      if (other.Result.Length != 0) {
        Result = other.Result;
      }
      if (other.Online.Length != 0) {
        Online = other.Online;
      }
      if (other.Status.Length != 0) {
        Status = other.Status;
      }
      if (other.Reason.Length != 0) {
        Reason = other.Reason;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            cmdType_ = (global::GrpcDeviceFeature.CommandType) input.ReadEnum();
            break;
          }
          case 16: {
            SN = input.ReadInt32();
            break;
          }
          case 26: {
            DeviceID = input.ReadString();
            break;
          }
          case 34: {
            Result = input.ReadString();
            break;
          }
          case 42: {
            Online = input.ReadString();
            break;
          }
          case 50: {
            Status = input.ReadString();
            break;
          }
          case 58: {
            Reason = input.ReadString();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
