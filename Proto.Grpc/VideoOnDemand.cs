// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: video_on_demand.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace GrpcVideoOnDemand {

  /// <summary>Holder for reflection information generated from video_on_demand.proto</summary>
  public static partial class VideoOnDemandReflection {

    #region Descriptor
    /// <summary>File descriptor for video_on_demand.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static VideoOnDemandReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChV2aWRlb19vbl9kZW1hbmQucHJvdG8SEUdycGNWaWRlb09uRGVtYW5kIl4K",
            "FlJlY29yZEZpbGVRdWVyeVJlcXVlc3QSEAoIZGV2aWNlaWQYASABKAkSEgoK",
            "c3RhcnRfdGltZRgCIAEoCRIQCghlbmRfdGltZRgDIAEoCRIMCgR0eXBlGAQg",
            "ASgJIkcKFFJlY29yZEZpbGVRdWVyeVJlcGx5Ei8KClJlY29yZEluZm8YASAB",
            "KAsyGy5HcnBjVmlkZW9PbkRlbWFuZC5JbnN0YW5jZSKlAQoISW5zdGFuY2US",
            "LwoHQ21kVHlwZRgBIAEoDjIeLkdycGNWaWRlb09uRGVtYW5kLkNvbW1hbmRU",
            "eXBlEgoKAlNOGAIgASgFEhAKCERldmljZUlEGAMgASgJEgwKBE5hbWUYBCAB",
            "KAkSDgoGU3VtTnVtGAUgASgFEiwKC1JlY29yZEl0ZW1zGAYgAygLMhcuR3Jw",
            "Y1ZpZGVvT25EZW1hbmQuSXRlbSKgAQoESXRlbRIQCghEZXZpY2VJRBgBIAEo",
            "CRIMCgROYW1lGAIgASgJEhAKCEZpbGVQYXRoGAMgASgJEg8KB0FkZHJlc3MY",
            "BCABKAkSEQoJU3RhcnRUaW1lGAUgASgJEg8KB0VuZFRpbWUYBiABKAkSDwoH",
            "U2VjcmVjeRgHIAEoBRIMCgRUeXBlGAggASgJEhIKClJlY29yZGVySUQYCSAB",
            "KAkqlwIKC0NvbW1hbmRUeXBlEgsKB1Vua25vd24QABINCglLZWVwYWxpdmUQ",
            "ARILCgdDYXRhbG9nEAISCAoEUGxheRADEgwKCFBsYXliYWNrEAQSEQoNRGV2",
            "aWNlQ29udHJvbBAFEgkKBUFsYXJtEAYSDgoKRGV2aWNlSW5mbxAHEhAKDERl",
            "dmljZVN0YXR1cxAIEg4KClJlY29yZEluZm8QCRIMCghEb3dubG9hZBAKEhIK",
            "DkNvbmZpZ0Rvd25sb2FkEAsSDQoJQnJvYWRjYXN0EAwSDwoLUHJlc2V0UXVl",
            "cnkQDRISCg5Nb2JpbGVQb3NpdGlvbhAOEhAKDERldmljZUNvbmZpZxAPEg8K",
            "C01lZGlhU3RhdHVzEBAyeAoNVmlkZW9PbkRlbWFuZBJnCg9SZWNvcmRGaWxl",
            "UXVlcnkSKS5HcnBjVmlkZW9PbkRlbWFuZC5SZWNvcmRGaWxlUXVlcnlSZXF1",
            "ZXN0GicuR3JwY1ZpZGVvT25EZW1hbmQuUmVjb3JkRmlsZVF1ZXJ5UmVwbHki",
            "AGIGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(new[] {typeof(global::GrpcVideoOnDemand.CommandType), }, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::GrpcVideoOnDemand.RecordFileQueryRequest), global::GrpcVideoOnDemand.RecordFileQueryRequest.Parser, new[]{ "Deviceid", "StartTime", "EndTime", "Type" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GrpcVideoOnDemand.RecordFileQueryReply), global::GrpcVideoOnDemand.RecordFileQueryReply.Parser, new[]{ "RecordInfo" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GrpcVideoOnDemand.Instance), global::GrpcVideoOnDemand.Instance.Parser, new[]{ "CmdType", "SN", "DeviceID", "Name", "SumNum", "RecordItems" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GrpcVideoOnDemand.Item), global::GrpcVideoOnDemand.Item.Parser, new[]{ "DeviceID", "Name", "FilePath", "Address", "StartTime", "EndTime", "Secrecy", "Type", "RecorderID" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Enums
  public enum CommandType {
    [pbr::OriginalName("Unknown")] Unknown = 0,
    [pbr::OriginalName("Keepalive")] Keepalive = 1,
    [pbr::OriginalName("Catalog")] Catalog = 2,
    [pbr::OriginalName("Play")] Play = 3,
    [pbr::OriginalName("Playback")] Playback = 4,
    [pbr::OriginalName("DeviceControl")] DeviceControl = 5,
    [pbr::OriginalName("Alarm")] Alarm = 6,
    [pbr::OriginalName("DeviceInfo")] DeviceInfo = 7,
    [pbr::OriginalName("DeviceStatus")] DeviceStatus = 8,
    [pbr::OriginalName("RecordInfo")] RecordInfo = 9,
    [pbr::OriginalName("Download")] Download = 10,
    [pbr::OriginalName("ConfigDownload")] ConfigDownload = 11,
    [pbr::OriginalName("Broadcast")] Broadcast = 12,
    [pbr::OriginalName("PresetQuery")] PresetQuery = 13,
    [pbr::OriginalName("MobilePosition")] MobilePosition = 14,
    [pbr::OriginalName("DeviceConfig")] DeviceConfig = 15,
    [pbr::OriginalName("MediaStatus")] MediaStatus = 16,
  }

  #endregion

  #region Messages
  /// <summary>
  /// The request message.
  /// </summary>
  public sealed partial class RecordFileQueryRequest : pb::IMessage<RecordFileQueryRequest> {
    private static readonly pb::MessageParser<RecordFileQueryRequest> _parser = new pb::MessageParser<RecordFileQueryRequest>(() => new RecordFileQueryRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RecordFileQueryRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GrpcVideoOnDemand.VideoOnDemandReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RecordFileQueryRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RecordFileQueryRequest(RecordFileQueryRequest other) : this() {
      deviceid_ = other.deviceid_;
      startTime_ = other.startTime_;
      endTime_ = other.endTime_;
      type_ = other.type_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RecordFileQueryRequest Clone() {
      return new RecordFileQueryRequest(this);
    }

    /// <summary>Field number for the "deviceid" field.</summary>
    public const int DeviceidFieldNumber = 1;
    private string deviceid_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Deviceid {
      get { return deviceid_; }
      set {
        deviceid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "start_time" field.</summary>
    public const int StartTimeFieldNumber = 2;
    private string startTime_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string StartTime {
      get { return startTime_; }
      set {
        startTime_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "end_time" field.</summary>
    public const int EndTimeFieldNumber = 3;
    private string endTime_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string EndTime {
      get { return endTime_; }
      set {
        endTime_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 4;
    private string type_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Type {
      get { return type_; }
      set {
        type_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RecordFileQueryRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RecordFileQueryRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Deviceid != other.Deviceid) return false;
      if (StartTime != other.StartTime) return false;
      if (EndTime != other.EndTime) return false;
      if (Type != other.Type) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Deviceid.Length != 0) hash ^= Deviceid.GetHashCode();
      if (StartTime.Length != 0) hash ^= StartTime.GetHashCode();
      if (EndTime.Length != 0) hash ^= EndTime.GetHashCode();
      if (Type.Length != 0) hash ^= Type.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Deviceid.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Deviceid);
      }
      if (StartTime.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(StartTime);
      }
      if (EndTime.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(EndTime);
      }
      if (Type.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Type);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Deviceid.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Deviceid);
      }
      if (StartTime.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(StartTime);
      }
      if (EndTime.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(EndTime);
      }
      if (Type.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Type);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RecordFileQueryRequest other) {
      if (other == null) {
        return;
      }
      if (other.Deviceid.Length != 0) {
        Deviceid = other.Deviceid;
      }
      if (other.StartTime.Length != 0) {
        StartTime = other.StartTime;
      }
      if (other.EndTime.Length != 0) {
        EndTime = other.EndTime;
      }
      if (other.Type.Length != 0) {
        Type = other.Type;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Deviceid = input.ReadString();
            break;
          }
          case 18: {
            StartTime = input.ReadString();
            break;
          }
          case 26: {
            EndTime = input.ReadString();
            break;
          }
          case 34: {
            Type = input.ReadString();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// The response message.
  /// </summary>
  public sealed partial class RecordFileQueryReply : pb::IMessage<RecordFileQueryReply> {
    private static readonly pb::MessageParser<RecordFileQueryReply> _parser = new pb::MessageParser<RecordFileQueryReply>(() => new RecordFileQueryReply());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RecordFileQueryReply> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GrpcVideoOnDemand.VideoOnDemandReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RecordFileQueryReply() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RecordFileQueryReply(RecordFileQueryReply other) : this() {
      RecordInfo = other.recordInfo_ != null ? other.RecordInfo.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RecordFileQueryReply Clone() {
      return new RecordFileQueryReply(this);
    }

    /// <summary>Field number for the "RecordInfo" field.</summary>
    public const int RecordInfoFieldNumber = 1;
    private global::GrpcVideoOnDemand.Instance recordInfo_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GrpcVideoOnDemand.Instance RecordInfo {
      get { return recordInfo_; }
      set {
        recordInfo_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RecordFileQueryReply);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RecordFileQueryReply other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(RecordInfo, other.RecordInfo)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (recordInfo_ != null) hash ^= RecordInfo.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (recordInfo_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(RecordInfo);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (recordInfo_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(RecordInfo);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RecordFileQueryReply other) {
      if (other == null) {
        return;
      }
      if (other.recordInfo_ != null) {
        if (recordInfo_ == null) {
          recordInfo_ = new global::GrpcVideoOnDemand.Instance();
        }
        RecordInfo.MergeFrom(other.RecordInfo);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (recordInfo_ == null) {
              recordInfo_ = new global::GrpcVideoOnDemand.Instance();
            }
            input.ReadMessage(recordInfo_);
            break;
          }
        }
      }
    }

  }

  public sealed partial class Instance : pb::IMessage<Instance> {
    private static readonly pb::MessageParser<Instance> _parser = new pb::MessageParser<Instance>(() => new Instance());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Instance> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GrpcVideoOnDemand.VideoOnDemandReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Instance() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Instance(Instance other) : this() {
      cmdType_ = other.cmdType_;
      sN_ = other.sN_;
      deviceID_ = other.deviceID_;
      name_ = other.name_;
      sumNum_ = other.sumNum_;
      recordItems_ = other.recordItems_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Instance Clone() {
      return new Instance(this);
    }

    /// <summary>Field number for the "CmdType" field.</summary>
    public const int CmdTypeFieldNumber = 1;
    private global::GrpcVideoOnDemand.CommandType cmdType_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GrpcVideoOnDemand.CommandType CmdType {
      get { return cmdType_; }
      set {
        cmdType_ = value;
      }
    }

    /// <summary>Field number for the "SN" field.</summary>
    public const int SNFieldNumber = 2;
    private int sN_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int SN {
      get { return sN_; }
      set {
        sN_ = value;
      }
    }

    /// <summary>Field number for the "DeviceID" field.</summary>
    public const int DeviceIDFieldNumber = 3;
    private string deviceID_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string DeviceID {
      get { return deviceID_; }
      set {
        deviceID_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Name" field.</summary>
    public const int NameFieldNumber = 4;
    private string name_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "SumNum" field.</summary>
    public const int SumNumFieldNumber = 5;
    private int sumNum_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int SumNum {
      get { return sumNum_; }
      set {
        sumNum_ = value;
      }
    }

    /// <summary>Field number for the "RecordItems" field.</summary>
    public const int RecordItemsFieldNumber = 6;
    private static readonly pb::FieldCodec<global::GrpcVideoOnDemand.Item> _repeated_recordItems_codec
        = pb::FieldCodec.ForMessage(50, global::GrpcVideoOnDemand.Item.Parser);
    private readonly pbc::RepeatedField<global::GrpcVideoOnDemand.Item> recordItems_ = new pbc::RepeatedField<global::GrpcVideoOnDemand.Item>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::GrpcVideoOnDemand.Item> RecordItems {
      get { return recordItems_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Instance);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Instance other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (CmdType != other.CmdType) return false;
      if (SN != other.SN) return false;
      if (DeviceID != other.DeviceID) return false;
      if (Name != other.Name) return false;
      if (SumNum != other.SumNum) return false;
      if(!recordItems_.Equals(other.recordItems_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (CmdType != 0) hash ^= CmdType.GetHashCode();
      if (SN != 0) hash ^= SN.GetHashCode();
      if (DeviceID.Length != 0) hash ^= DeviceID.GetHashCode();
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (SumNum != 0) hash ^= SumNum.GetHashCode();
      hash ^= recordItems_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (CmdType != 0) {
        output.WriteRawTag(8);
        output.WriteEnum((int) CmdType);
      }
      if (SN != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(SN);
      }
      if (DeviceID.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(DeviceID);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Name);
      }
      if (SumNum != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(SumNum);
      }
      recordItems_.WriteTo(output, _repeated_recordItems_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (CmdType != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) CmdType);
      }
      if (SN != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(SN);
      }
      if (DeviceID.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(DeviceID);
      }
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (SumNum != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(SumNum);
      }
      size += recordItems_.CalculateSize(_repeated_recordItems_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Instance other) {
      if (other == null) {
        return;
      }
      if (other.CmdType != 0) {
        CmdType = other.CmdType;
      }
      if (other.SN != 0) {
        SN = other.SN;
      }
      if (other.DeviceID.Length != 0) {
        DeviceID = other.DeviceID;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.SumNum != 0) {
        SumNum = other.SumNum;
      }
      recordItems_.Add(other.recordItems_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            cmdType_ = (global::GrpcVideoOnDemand.CommandType) input.ReadEnum();
            break;
          }
          case 16: {
            SN = input.ReadInt32();
            break;
          }
          case 26: {
            DeviceID = input.ReadString();
            break;
          }
          case 34: {
            Name = input.ReadString();
            break;
          }
          case 40: {
            SumNum = input.ReadInt32();
            break;
          }
          case 50: {
            recordItems_.AddEntriesFrom(input, _repeated_recordItems_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class Item : pb::IMessage<Item> {
    private static readonly pb::MessageParser<Item> _parser = new pb::MessageParser<Item>(() => new Item());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Item> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GrpcVideoOnDemand.VideoOnDemandReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Item() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Item(Item other) : this() {
      deviceID_ = other.deviceID_;
      name_ = other.name_;
      filePath_ = other.filePath_;
      address_ = other.address_;
      startTime_ = other.startTime_;
      endTime_ = other.endTime_;
      secrecy_ = other.secrecy_;
      type_ = other.type_;
      recorderID_ = other.recorderID_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Item Clone() {
      return new Item(this);
    }

    /// <summary>Field number for the "DeviceID" field.</summary>
    public const int DeviceIDFieldNumber = 1;
    private string deviceID_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string DeviceID {
      get { return deviceID_; }
      set {
        deviceID_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Name" field.</summary>
    public const int NameFieldNumber = 2;
    private string name_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "FilePath" field.</summary>
    public const int FilePathFieldNumber = 3;
    private string filePath_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string FilePath {
      get { return filePath_; }
      set {
        filePath_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Address" field.</summary>
    public const int AddressFieldNumber = 4;
    private string address_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Address {
      get { return address_; }
      set {
        address_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "StartTime" field.</summary>
    public const int StartTimeFieldNumber = 5;
    private string startTime_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string StartTime {
      get { return startTime_; }
      set {
        startTime_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "EndTime" field.</summary>
    public const int EndTimeFieldNumber = 6;
    private string endTime_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string EndTime {
      get { return endTime_; }
      set {
        endTime_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Secrecy" field.</summary>
    public const int SecrecyFieldNumber = 7;
    private int secrecy_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Secrecy {
      get { return secrecy_; }
      set {
        secrecy_ = value;
      }
    }

    /// <summary>Field number for the "Type" field.</summary>
    public const int TypeFieldNumber = 8;
    private string type_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Type {
      get { return type_; }
      set {
        type_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "RecorderID" field.</summary>
    public const int RecorderIDFieldNumber = 9;
    private string recorderID_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string RecorderID {
      get { return recorderID_; }
      set {
        recorderID_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Item);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Item other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (DeviceID != other.DeviceID) return false;
      if (Name != other.Name) return false;
      if (FilePath != other.FilePath) return false;
      if (Address != other.Address) return false;
      if (StartTime != other.StartTime) return false;
      if (EndTime != other.EndTime) return false;
      if (Secrecy != other.Secrecy) return false;
      if (Type != other.Type) return false;
      if (RecorderID != other.RecorderID) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (DeviceID.Length != 0) hash ^= DeviceID.GetHashCode();
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (FilePath.Length != 0) hash ^= FilePath.GetHashCode();
      if (Address.Length != 0) hash ^= Address.GetHashCode();
      if (StartTime.Length != 0) hash ^= StartTime.GetHashCode();
      if (EndTime.Length != 0) hash ^= EndTime.GetHashCode();
      if (Secrecy != 0) hash ^= Secrecy.GetHashCode();
      if (Type.Length != 0) hash ^= Type.GetHashCode();
      if (RecorderID.Length != 0) hash ^= RecorderID.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (DeviceID.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(DeviceID);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Name);
      }
      if (FilePath.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(FilePath);
      }
      if (Address.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Address);
      }
      if (StartTime.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(StartTime);
      }
      if (EndTime.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(EndTime);
      }
      if (Secrecy != 0) {
        output.WriteRawTag(56);
        output.WriteInt32(Secrecy);
      }
      if (Type.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(Type);
      }
      if (RecorderID.Length != 0) {
        output.WriteRawTag(74);
        output.WriteString(RecorderID);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (DeviceID.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(DeviceID);
      }
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (FilePath.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(FilePath);
      }
      if (Address.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Address);
      }
      if (StartTime.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(StartTime);
      }
      if (EndTime.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(EndTime);
      }
      if (Secrecy != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Secrecy);
      }
      if (Type.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Type);
      }
      if (RecorderID.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(RecorderID);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Item other) {
      if (other == null) {
        return;
      }
      if (other.DeviceID.Length != 0) {
        DeviceID = other.DeviceID;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.FilePath.Length != 0) {
        FilePath = other.FilePath;
      }
      if (other.Address.Length != 0) {
        Address = other.Address;
      }
      if (other.StartTime.Length != 0) {
        StartTime = other.StartTime;
      }
      if (other.EndTime.Length != 0) {
        EndTime = other.EndTime;
      }
      if (other.Secrecy != 0) {
        Secrecy = other.Secrecy;
      }
      if (other.Type.Length != 0) {
        Type = other.Type;
      }
      if (other.RecorderID.Length != 0) {
        RecorderID = other.RecorderID;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            DeviceID = input.ReadString();
            break;
          }
          case 18: {
            Name = input.ReadString();
            break;
          }
          case 26: {
            FilePath = input.ReadString();
            break;
          }
          case 34: {
            Address = input.ReadString();
            break;
          }
          case 42: {
            StartTime = input.ReadString();
            break;
          }
          case 50: {
            EndTime = input.ReadString();
            break;
          }
          case 56: {
            Secrecy = input.ReadInt32();
            break;
          }
          case 66: {
            Type = input.ReadString();
            break;
          }
          case 74: {
            RecorderID = input.ReadString();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
