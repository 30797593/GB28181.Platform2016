// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ptz_control.proto
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace GrpcPtzControl {

  /// <summary>Holder for reflection information generated from ptz_control.proto</summary>
  public static partial class PtzControlReflection {

    #region Descriptor
    /// <summary>File descriptor for ptz_control.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static PtzControlReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChFwdHpfY29udHJvbC5wcm90bxIOR3JwY1B0ekNvbnRyb2wiWAoQUHR6RGly",
            "ZWN0UmVxdWVzdBIjCgN4eXoYASABKAsyFi5HcnBjUHR6Q29udHJvbC5QdHpY",
            "WVoSDQoFc3BlZWQYAiABKAUSEAoIZGV2aWNlaWQYAyABKAkiIQoOUHR6RGly",
            "ZWN0UmVwbHkSDwoHbWVzc2FnZRgBIAEoCSIpCgZQdHpYWVoSCQoBWBgBIAEo",
            "BRIJCgFZGAIgASgFEgkKAVoYAyABKAUyXQoKUHR6Q29udHJvbBJPCglQdHpE",
            "aXJlY3QSIC5HcnBjUHR6Q29udHJvbC5QdHpEaXJlY3RSZXF1ZXN0Gh4uR3Jw",
            "Y1B0ekNvbnRyb2wuUHR6RGlyZWN0UmVwbHkiAGIGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::GrpcPtzControl.PtzDirectRequest), global::GrpcPtzControl.PtzDirectRequest.Parser, new[]{ "Xyz", "Speed", "Deviceid" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GrpcPtzControl.PtzDirectReply), global::GrpcPtzControl.PtzDirectReply.Parser, new[]{ "Message" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GrpcPtzControl.PtzXYZ), global::GrpcPtzControl.PtzXYZ.Parser, new[]{ "X", "Y", "Z" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  /// The request message.
  /// </summary>
  public sealed partial class PtzDirectRequest : pb::IMessage<PtzDirectRequest> {
    private static readonly pb::MessageParser<PtzDirectRequest> _parser = new pb::MessageParser<PtzDirectRequest>(() => new PtzDirectRequest());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PtzDirectRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GrpcPtzControl.PtzControlReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PtzDirectRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PtzDirectRequest(PtzDirectRequest other) : this() {
      Xyz = other.xyz_ != null ? other.Xyz.Clone() : null;
      speed_ = other.speed_;
      deviceid_ = other.deviceid_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PtzDirectRequest Clone() {
      return new PtzDirectRequest(this);
    }

    /// <summary>Field number for the "xyz" field.</summary>
    public const int XyzFieldNumber = 1;
    private global::GrpcPtzControl.PtzXYZ xyz_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GrpcPtzControl.PtzXYZ Xyz {
      get { return xyz_; }
      set {
        xyz_ = value;
      }
    }

    /// <summary>Field number for the "speed" field.</summary>
    public const int SpeedFieldNumber = 2;
    private int speed_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Speed {
      get { return speed_; }
      set {
        speed_ = value;
      }
    }

    /// <summary>Field number for the "deviceid" field.</summary>
    public const int DeviceidFieldNumber = 3;
    private string deviceid_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Deviceid {
      get { return deviceid_; }
      set {
        deviceid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PtzDirectRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PtzDirectRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Xyz, other.Xyz)) return false;
      if (Speed != other.Speed) return false;
      if (Deviceid != other.Deviceid) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (xyz_ != null) hash ^= Xyz.GetHashCode();
      if (Speed != 0) hash ^= Speed.GetHashCode();
      if (Deviceid.Length != 0) hash ^= Deviceid.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (xyz_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Xyz);
      }
      if (Speed != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Speed);
      }
      if (Deviceid.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Deviceid);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (xyz_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Xyz);
      }
      if (Speed != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Speed);
      }
      if (Deviceid.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Deviceid);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PtzDirectRequest other) {
      if (other == null) {
        return;
      }
      if (other.xyz_ != null) {
        if (xyz_ == null) {
          xyz_ = new global::GrpcPtzControl.PtzXYZ();
        }
        Xyz.MergeFrom(other.Xyz);
      }
      if (other.Speed != 0) {
        Speed = other.Speed;
      }
      if (other.Deviceid.Length != 0) {
        Deviceid = other.Deviceid;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            if (xyz_ == null) {
              xyz_ = new global::GrpcPtzControl.PtzXYZ();
            }
            input.ReadMessage(xyz_);
            break;
          }
          case 16: {
            Speed = input.ReadInt32();
            break;
          }
          case 26: {
            Deviceid = input.ReadString();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// The response message.
  /// </summary>
  public sealed partial class PtzDirectReply : pb::IMessage<PtzDirectReply> {
    private static readonly pb::MessageParser<PtzDirectReply> _parser = new pb::MessageParser<PtzDirectReply>(() => new PtzDirectReply());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PtzDirectReply> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GrpcPtzControl.PtzControlReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PtzDirectReply() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PtzDirectReply(PtzDirectReply other) : this() {
      message_ = other.message_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PtzDirectReply Clone() {
      return new PtzDirectReply(this);
    }

    /// <summary>Field number for the "message" field.</summary>
    public const int MessageFieldNumber = 1;
    private string message_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Message {
      get { return message_; }
      set {
        message_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PtzDirectReply);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PtzDirectReply other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Message != other.Message) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Message.Length != 0) hash ^= Message.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Message.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Message);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Message.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Message);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PtzDirectReply other) {
      if (other == null) {
        return;
      }
      if (other.Message.Length != 0) {
        Message = other.Message;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            Message = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class PtzXYZ : pb::IMessage<PtzXYZ> {
    private static readonly pb::MessageParser<PtzXYZ> _parser = new pb::MessageParser<PtzXYZ>(() => new PtzXYZ());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PtzXYZ> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GrpcPtzControl.PtzControlReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PtzXYZ() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PtzXYZ(PtzXYZ other) : this() {
      x_ = other.x_;
      y_ = other.y_;
      z_ = other.z_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PtzXYZ Clone() {
      return new PtzXYZ(this);
    }

    /// <summary>Field number for the "X" field.</summary>
    public const int XFieldNumber = 1;
    private int x_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int X {
      get { return x_; }
      set {
        x_ = value;
      }
    }

    /// <summary>Field number for the "Y" field.</summary>
    public const int YFieldNumber = 2;
    private int y_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Y {
      get { return y_; }
      set {
        y_ = value;
      }
    }

    /// <summary>Field number for the "Z" field.</summary>
    public const int ZFieldNumber = 3;
    private int z_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Z {
      get { return z_; }
      set {
        z_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PtzXYZ);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PtzXYZ other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (X != other.X) return false;
      if (Y != other.Y) return false;
      if (Z != other.Z) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (X != 0) hash ^= X.GetHashCode();
      if (Y != 0) hash ^= Y.GetHashCode();
      if (Z != 0) hash ^= Z.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (X != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(X);
      }
      if (Y != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Y);
      }
      if (Z != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Z);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (X != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(X);
      }
      if (Y != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Y);
      }
      if (Z != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Z);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PtzXYZ other) {
      if (other == null) {
        return;
      }
      if (other.X != 0) {
        X = other.X;
      }
      if (other.Y != 0) {
        Y = other.Y;
      }
      if (other.Z != 0) {
        Z = other.Z;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            X = input.ReadInt32();
            break;
          }
          case 16: {
            Y = input.ReadInt32();
            break;
          }
          case 24: {
            Z = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
